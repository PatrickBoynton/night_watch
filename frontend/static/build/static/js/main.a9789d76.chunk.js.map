{"version":3,"sources":["components/user/Register.js","components/user/Login.js","components/user/Profile.js","components/ephem/EphemForm.js","components/ephem/EphemDisplay.js","components/ephem/EphemList.js","components/events/EventForm.js","components/events/EventDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["Register","props","state","username","email","password1","password2","handleInput","bind","handleSubmit","event","this","setState","target","name","value","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","className","onSubmit","e","htmlFor","onChange","type","to","Component","Login","password","response","json","data","key","set","console","log","Profile","remove","src","alt","onClick","handleLogout","EphemForm","rise_time","set_time","magnitude","image","description","preview","handleImage","dir","file","files","reader","FileReader","onloadend","result","readAsDataURL","formData","FormData","append","valu","cols","rows","EphemDisplay","ephem","ephems","map","EphemList","list","item","id","EventForm","time","ephemeris","EventDisplay","isEditMode","isAdmin","handleDelete","handleEditMode","previousState","events","showForm","App","isLoggedIn","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9789d76.chunk.js","sourcesContent":["import {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: '',\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                email: this.state.email,\n                password1: this.state.password1,\n                password2: this.state.password2})\n        }\n        await fetch('/rest-auth/registration/', options)\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"login-register\" onSubmit={(e) => this.handleSubmit(e)}>\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput} value={this.state.username} className=\"form-control\" type=\"text\"\n                           name=\"username\"/>\n                    <label className=\"form-label\" htmlFor=\"email\">Email</label>\n                    <input onChange={this.handleInput} value={this.state.email} className=\"form-control\" type=\"email\"\n                           name=\"email\"/>\n                    <label className=\"form-label\" htmlFor=\"password1\">Password</label>\n                    <input onChange={this.handleInput} value={this.state.password1} className=\"form-control\"\n                           type=\"password\" name=\"password1\"/>\n                    <label className=\"form-label\" htmlFor=\"password2\">Confirm Password</label>\n                    <input onChange={this.handleInput} value={this.state.password2} className=\"form-control mb-3\"\n                           type=\"password\" name=\"password2\"/>\n                    <button className=\"btn btn-success\" type=\"submit\">Register</button>\n                    <p>Already have an account? Why don't you <Link to=\"/login\">Login</Link>? </p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Register;","import {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        // const user = {\n        //     username: this.state.username,\n        //     password: this.state.password\n        // }\n        // axios.post('/rest-auth/login/', user).then(x => x)\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n            })\n        }\n\n        const response = await fetch('/rest-auth/login/', options);\n        const data = await response.json();\n\n        if(data.key) {\n            Cookies.set(\"Authorization\", `Token ${data.key}`)\n        } else {\n            console.log(\"Did not log in.\");\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"text-center login-register\" onSubmit={this.handleSubmit}>\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput} className=\"form-control\" type=\"text\" name=\"username\"/>\n                    <label className=\"form-label\" htmlFor=\"password\">Password</label>\n                    <input onChange={this.handleInput} className=\"form-control mb-3\" type=\"password\" name=\"password\" />\n                    <button className=\"btn btn-success\">Login</button>\n                    <p>Don't have an account yet? Why not <Link to=\"/register\">Register</Link> First?</p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Login;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass Profile extends Component {\n\n    handleLogout() {\n        Cookies.remove('Authorization');\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Username</h1>\n                <img src=\"#\" alt=\"user\"/>\n                <p>About me</p>\n                <p>My equipment</p>\n                <button onClick={this.handleLogout} className=\"btn btn-danger\">Logout</button>\n            </>\n        );\n    }\n}\n\nexport default Profile;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass EphemForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            rise_time: '',\n            set_time: '',\n            magnitude: 0,\n            image: '',\n            description: '',\n            preview: '',\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleImage(e) {\n        console.dir('test', e.target);\n        let file = e.target.files[0];\n        this.setState({ image: file });\n        let reader = new FileReader();\n        reader.onloadend = () => {\n            this.setState({\n                preview: reader.result\n            });\n        };\n        reader.readAsDataURL(file);\n    }\n\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        let formData = new FormData();\n        // TODO for in.\n        formData.append('image', this.state.image);\n        formData.append('name', this.state.name);\n        formData.append('rise_time', this.state.rise_time);\n        formData.append('set_time', this.state.set_time);\n        formData.append('magnitude', this.state.magnitude);\n        formData.append('description', this.state.description);\n        const options = {\n            method: 'POST',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: formData\n        };\n\n        const response = await fetch('/api/v1/ephem/', options);\n        const data = await response.json();\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <form onSubmit={(e) => this.handleSubmit(e, this.state)}>\n                <label className=\"form-label\" htmlFor=\"name\">Name</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.name}\n                       name=\"name\"/>\n                <label className=\"form-label\" htmlFor=\"rise_time\">Rise Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.rise_time}\n                       name=\"rise_time\"/>\n                <label className=\"form-label\" htmlFor=\"set_time\">Set Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       valu={this.state.set_time}\n                       name=\"set_time\"/>\n                <label className=\"form-label\" htmlFor=\"magnitude\">Magnitude</label>\n                <input className=\"form-control\"\n                       type=\"number\"\n                       onChange={this.handleInput}\n                       value={this.state.magnitude}\n                       name=\"magnitude\"/>\n                <label className=\"form-label\" htmlFor=\"image\">Image</label>\n                <input className=\"form-control\"\n                       type=\"file\"\n                       onChange={this.handleImage}\n                       name=\"image\"/>\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          value={this.state.description}\n                          name=\"description\"\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n}\n\nexport default EphemForm;","import {Component} from 'react';\n\nclass EphemDisplay extends Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ephem: [],\n        }\n    }\n\n    async componentDidMount() {\n        const response =  await fetch(\"/api/v1/ephem/\");\n        const data = await response.json();\n\n        this.setState({ephem: data})\n        console.log(this.state);\n    }\n\n    render() {\n        const ephems = this.state.ephem.map(ephem => <section>\n            <img src={ephem.image} alt=\"The sun.\"/>\n            <h1>{ephem.name}</h1>\n            <p>Rise time: </p>\n            <h2>{ephem.rise_time}</h2>\n            <p>Set time: </p>\n            <h2>{ephem.set_time}</h2>\n        </section>);\n        return (\n            <>\n                {ephems[0]}\n            </>\n        );\n    }\n}\n\nexport default EphemDisplay","import {Component} from 'react';\n\nclass EphemList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ephems: [],\n        };\n    }\n\n    async componentDidMount() {\n        const response = await fetch('api/v1/ephem/');\n        const data = await response.json();\n        this.setState({ephems: data});\n    }\n\n    render() {\n        const list = this.state.ephems.map(item => <section key={item.id} className=\"row\">\n            <div className=\"col\">\n                <img src={item.image} alt=\"A planet, star or satellite.\"/>\n                <h2>{item.name}</h2>\n                <p>rise time: {item.rise_time}</p>\n                <p>set time: {item.set_time}</p>\n            </div>\n        </section>);\n        return (\n            <div className=\"container\">\n                {list}\n            </div>\n        );\n    }\n}\n\nexport default EphemList;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass EventForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            time: '',\n            target: '',\n            description: '',\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"Application/Json\",\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                time: this.state.time,\n                ephemeris: this.state.target,\n                description: this.state.description\n            })\n        };\n        const response = await fetch('/api/v1/events/', options);\n        const data = await response.json();\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label className=\"form-label\" htmlFor=\"name\">Event Name</label>\n                <input className=\"form-control\" type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"name\"/>\n                <label className=\"form-label\" htmlFor=\"target\">Target</label>\n                <input type=\"text\"\n                       className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"target\"/>\n                <label className=\"form-label\" htmlFor=\"time\">Time</label>\n                <input className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"time\"\n                       type=\"text\"/>\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          name=\"description\"\n                          value={this.state.value}>\n                </textarea>\n                <button className=\"btn btn-success\" type=\"submit\">Create Event</button>\n            </form>\n        );\n    }\n\n}\n\nexport default EventForm;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass EventDisplay extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            data: [],\n            isEditMode: false,\n            isAdmin: true,\n            name: '',\n            ephemeris: '',\n            time: '',\n        };\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        const options = {\n            method: 'PUT',\n            headers: {\n                \"Content-Type\":\"Application/Json\",\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                ephemeris: this.state.ephemeris,\n                time: this.state.time\n            })\n        };\n\n        // await fetch(\"/api/v1/events/\", options);\n        await fetch(`/api/v1/events/${this.state.id}/`, options);\n    }\n\n    handleDelete(id) {\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken')\n            }\n        };\n        fetch(`/api/v1/events/${id}/`, options);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/v1/events/');\n        const data = await response.json();\n        console.log(data);\n        this.setState({data});\n    }\n\n    showForm() {\n        return <form onSubmit={this.handleSubmit}>\n            <label className=\"form-label\" htmlFor=\"name\">Name</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"name\"\n                   value={this.state.name}/>\n            <label className=\"form-label\" htmlFor=\"ephemeris\">Target</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"ephemeris\"\n                   value={this.state.ephemeris}/>\n            <label className=\"form-label\" htmlFor=\"time\">Time</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"time\"\n                   value={this.state.time}/>\n            <label className=\"form-label\" htmlFor=\"description\">Description</label>\n            <textarea className=\"form-control\" name=\"description\" value={this.state.description} cols=\"30\" rows=\"10\">\n            </textarea>\n            <button className=\"btn btn-primary\" type=\"submit\">Edit</button>\n        </form>;\n    }\n\n    handleEditMode(e) {\n        this.setState((previousState) => ({isEditMode: !previousState.isEditMode}));\n        this.setState({\n            name: e.name,\n            ephemeris: e.ephemeris, time: e.time, id: e.id\n        });\n    }\n\n    render() {\n        let events = this.state.data?.map(event => <section key={event.id}>\n            <>\n                <h2>{event.name}</h2>\n                <p>{event.ephemeris}</p>\n                <p>{event.time}</p>\n                <p>{event.description}</p>\n                <div className=\"button-group\">\n                    <button onClick={() => this.handleEditMode(event)} className=\"btn btn-primary\">Edit</button>\n                    <button onClick={() => this.handleDelete(event.id)} className=\"btn btn-danger\">Delete\n                    </button>\n                </div>\n            </>\n        </section>);\n        return (\n            <>\n                {\n                    !this.state.isEditMode\n                        ?\n                        events\n                        :\n                        this.showForm()\n                }\n            </>\n        );\n    }\n\n}\n\nexport default EventDisplay;","import './App.css';\nimport Register from './components/user/Register';\nimport Login from './components/user/Login';\nimport Profile from './components/user/Profile';\nimport {Switch, Route} from 'react-router-dom';\nimport {Component} from 'react';\nimport EphemForm from './components/ephem/EphemForm';\nimport EphemDisplay from './components/ephem/EphemDisplay';\nimport EphemList from './components/ephem/EphemList';\nimport EventForm from './components/events/EventForm';\nimport EventDisplay from './components/events/EventDisplay';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: false,\n        };\n    }\n\n    handleIsLoggedIn() {\n        this.setState((previousState) => ({isLoggedIn: !previousState.isLoggedIn}));\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Switch>\n                    <Route path='/register' component={Register}/>\n                    <Route path='/login' component={Login}/>\n                    <Route path=\"/profile\" component={Profile}/>\n                    <Route path=\"/ephem/form\" component={EphemForm}/>\n                    <Route path=\"/event/form\"  component={EventForm}/>\n                    <Route path=\"/display\" component={EphemDisplay} />\n                    <Route path=\"/celestial-list\" component={EphemList}/>\n                    <Route path=\"/events\" component={EventDisplay}/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}