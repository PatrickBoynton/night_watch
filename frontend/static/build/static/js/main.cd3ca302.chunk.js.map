{"version":3,"sources":["components/user/Register.js","components/user/Login.js","components/user/Profile.js","components/ephem/EphemForm.js","components/ephem/EphemDisplay.js","components/ephem/EphemList.js","components/events/EventForm.js","components/events/EventDisplay.js","components/Navigation.js","components/user/ProfileForm.js","components/pages/Home.js","components/pages/About.js","components/pages/Glossary.js","components/ephem/SMSForm.js","App.js","reportWebVitals.js","index.js"],"names":["Register","props","state","username","email","password1","password2","formErrors","other","handleInput","bind","handleSubmit","event","this","setState","target","name","value","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","json","data","console","log","status","set","key","history","push","to","className","onSubmit","e","htmlFor","onChange","type","required","disabled","Component","Login","password","statusMessage","handleIsLoggedIn","ok","setTimeout","clearTimeout","Profile","handleLogout","remove","user","src","profile_picture","alt","onClick","about_me","EphemForm","rise_time","set_time","magnitude","image","description","preview","handleImage","file","files","reader","FileReader","onloadend","result","readAsDataURL","formData","FormData","append","cols","rows","EphemDisplay","ephem","ephems","map","EphemList","message","isEditMode","isAdmin","submitting","error","handleEditMode","handleText","handleCheck","profile","profileData","currentState","phone","id","filter","list","item","index","showForm","EventForm","time","ephemeris","handleSMS","EventDisplay","handleDelete","window","location","reload","previousState","events","Navigation","isLoggedIn","ProfileForm","equipment","receive_notifications","catch","maxLength","placeholder","Home","About","Glossary","SMSForm","App","my_equipment","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd3ca302.chunk.js","sourcesContent":["import {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: '',\n            formErrors: {\n                email: '',\n                username: '',\n                other: '',\n            }\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                email: this.state.email,\n                password1: this.state.password1,\n                password2: this.state.password2,\n            })\n        };\n        const response = await fetch('/rest-auth/registration/', options);\n        const data = await response.json();\n        console.log(data);\n        if (response.status === 201) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n            this.props.history.push('/create-profile');\n            return <Redirect to=\"/create-profile\"/>;\n        } else {\n            console.log(data);\n            this.setState({formErrors: {username: data.username, email: data.email}});\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"login-register needs-validation\" onSubmit={(e) => this.handleSubmit(e)}>\n                    <h2>Register</h2>\n                    {this.state.formErrors.username !== '' ?\n                        <div className=\"alert-danger\">{this.state.formErrors.username}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput}\n                           value={this.state.username}\n                           className=\"form-control needs-validation\"\n                           type=\"text\"\n                           name=\"username\"\n                           required/>\n\n                    {this.state.formErrors.email !== '' ?\n                        <div className=\"alert-danger\">{this.state.formErrors.email}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"email\">Email</label>\n                    <input onChange={this.handleInput}\n                           value={this.state.email}\n                           className=\"form-control needs-validation\"\n                           type=\"email\"\n                           name=\"email\"\n                           required/>\n\n                    <div className=\"row g-3\">\n                        <div className=\"col\">\n\n                            <label className=\"form-label\" htmlFor=\"password1\">Password</label>\n                            <input onChange={this.handleInput}\n                                   value={this.state.password1}\n                                   className=\"form-control needs-validation\"\n                                   type=\"password\"\n                                   name=\"password1\"\n                                   required/>\n                        </div>\n                        <div className=\"col\">\n\n                            <label className=\"form-label\" htmlFor=\"password2\">Confirm Password</label>\n                            <input onChange={this.handleInput}\n                                   value={this.state.password2}\n                                   className=\"form-control mb-3 needs-validation\"\n                                   type=\"password\"\n                                   name=\"password2\"\n                                   required/>\n                        </div>\n                    </div>\n                    {\n                        this.state.username !== '' && this.state.email !== '' && this.state.password1 && this.state.password2\n                            ?\n                            <button className=\"btn btn-success\" type=\"submit\">Register</button>\n                            :\n                            <button className=\"btn btn-success\" type=\"submit\" disabled>Register</button>\n                    }\n                    <p>Already have an account? Why don't you <Link to=\"/login\">Login</Link>? </p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Register;","import {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            statusMessage: '',\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Authorization': Cookies.get('Authorization')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n            })\n        };\n\n        const response = await fetch('/rest-auth/login/', options);\n        const data = await response.json();\n\n        if (data.key) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n            if (Cookies.get('Authorization')) {\n                this.props.handleIsLoggedIn();\n                this.props.history.push('/celestial-list');\n                return <Redirect to=\"/celestial-list\"/>;\n            }\n        } else if (!response.ok) {\n            setTimeout(() => this.setState({statusMessage: 'Something went wrong.'}), 2000);\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout();\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"text-center login-register\" onSubmit={this.handleSubmit}>\n                    <h2>Login</h2>\n                    {this.state.statusMessage !== '' ?\n                        <div className=\"alert-danger\">{this.state.statusMessage}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput}\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"username\" required/>\n\n                    <label className=\"form-label\" htmlFor=\"password\">Password</label>\n                    <input onChange={this.handleInput}\n                           className=\"form-control mb-3\"\n                           type=\"password\"\n                           name=\"password\" required/>\n                    {\n                        this.state.username !== '' && this.state.password !== ''\n                            ?\n                            <button className=\"btn btn-success\">Login</button>\n                            :\n                            <button className=\"btn btn-success\" disabled>Login</button>\n                    }\n                    <p>Don't have an account yet? Why not <Link to=\"/register\">Register</Link> First?</p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Login;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Link, Redirect} from 'react-router-dom';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    async handleLogout() {\n\n        await fetch('/rest-auth/logout/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Authorization': Cookies.get('Authorization')\n            }\n        });\n        Cookies.remove('Authorization');\n        Cookies.remove('csrftoken');\n        this.props.handleIsLoggedIn();\n        this.props.history.push('/login');\n        return <Redirect to=\"/login\"/>;\n    }\n\n    render() {\n        return (\n            <div className=\"container test\">\n                <div className=\"left-boarder\">\n                    <h1>{this.props.user.user}</h1>\n                    <img className=\"profile-image\" src={this.props.user.profile_picture} alt=\"username\"/>\n                    <p>If you haven't yet created a profile, why not <Link to=\"/create-profile\">Create a\n                        Profile</Link></p>\n                    <button onClick={this.handleLogout} className=\"btn btn-danger\">Logout</button>\n                </div>\n                <div className=\"right-boarder\">\n                    <p className=\"about-text\" >{this.props.user.about_me}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass EphemForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            rise_time: '',\n            set_time: '',\n            magnitude: 0,\n            image: '',\n            description: '',\n            preview: '',\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleImage(e) {\n        let file = e.target.files[0];\n\n        this.setState({image: file});\n\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            this.setState({\n                preview: reader.result\n            });\n        };\n\n        reader.readAsDataURL(file);\n    }\n\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        let formData = new FormData();\n\n        formData.append('image', this.state.image);\n        formData.append('name', this.state.name);\n        formData.append('rise_time', this.state.rise_time);\n        formData.append('set_time', this.state.set_time);\n        formData.append('magnitude', this.state.magnitude);\n        formData.append('description', this.state.description);\n        const options = {\n            method: 'POST',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: formData\n        };\n\n        await fetch('/api/v1/ephem/', options);\n    }\n\n    render() {\n        return (\n            <form onSubmit={(e) => this.handleSubmit(e, this.state)}>\n                <label className=\"form-label\" htmlFor=\"name\">Name</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.name}\n                       name=\"name\"/>\n\n                <label className=\"form-label\" htmlFor=\"rise_time\">Rise Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.rise_time}\n                       name=\"rise_time\"/>\n\n                <label className=\"form-label\" htmlFor=\"set_time\">Set Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.set_time}\n                       name=\"set_time\"/>\n\n                <label className=\"form-label\" htmlFor=\"magnitude\">Magnitude</label>\n                <input className=\"form-control\"\n                       type=\"number\"\n                       onChange={this.handleInput}\n                       value={this.state.magnitude}\n                       name=\"magnitude\"/>\n                {\n                    this.state.image && <img src={this.state.preview} alt=\"preview\"/>\n                }\n                <label className=\"form-label\" htmlFor=\"image\">Image</label>\n                <input className=\"form-control\"\n                       type=\"file\"\n                       onChange={this.handleImage}\n                       name=\"image\"/>\n\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          value={this.state.description}\n                          name=\"description\"\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n}\n\nexport default EphemForm;","import {Component} from 'react';\n\nclass EphemDisplay extends Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ephem: [],\n        }\n    }\n\n    async componentDidMount() {\n        const response =  await fetch(\"/api/v1/ephem/\");\n        const data = await response.json();\n\n        this.setState({ephem: data})\n        console.log(this.state);\n    }\n\n    render() {\n        const ephems = this.state.ephem.map(ephem => <section>\n            <img src={ephem.image} alt={ephem.name}/>\n            <h1>{ephem.name}</h1>\n            <p>Rise time: </p>\n            <h2>{ephem.rise_time}</h2>\n            <p>Set time: </p>\n            <h2>{ephem.set_time}</h2>\n        </section>);\n        return (\n            <>\n                {ephems[0]}\n            </>\n        );\n    }\n}\n\nexport default EphemDisplay","import {Component} from 'react';\n\nclass EphemList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ephems: [],\n            message: {\n                to: '',\n                body: ''\n            },\n            isEditMode: false,\n            isAdmin: false,\n            submitting: false,\n            error: false,\n            result: ''\n        };\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleText = this.handleText.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.handleCheck = this.handleCheck.bind(this);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('api/v1/ephem/');\n        const data = await response.json();\n        this.setState({ephems: data});\n\n        const profile = await fetch('api/v1/profiles/details/');\n        const profileData = await profile.json();\n        let currentState = this.state.message;\n\n        currentState['to'] = '+' + profileData.phone;\n        this.setState({currentState});\n    }\n\n    handleEditMode() {\n        this.setState({isEditMode: true});\n    }\n\n    handleSubmit() {\n        this.setState({isEditMode: false});\n    }\n\n    async handleText(event, id) {\n        event.preventDefault();\n        let currentState = this.state.message;\n\n        currentState['body'] = `Rise time: ${this.state.ephems[id].rise_time} Name: ${this.state.ephems[id].name}`;\n        this.setState({submitting: true});\n        this.setState({currentState});\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json'\n            },\n            body: JSON.stringify(this.state.message.body)\n        };\n        await fetch('/api/v1/broadcast/', options);\n        console.log(this.state.message.body);\n    }\n\n    handleInput(event) {\n        this.setState({result: event.target.value});\n    }\n\n    handleCheck() {\n        console.log(this.state.ephems.filter(name => name.name === this.state.result));\n    }\n\n    // TODO hook up when finished.\n    // showForm(item) {\n    //     return <form action=\"\" onSubmit={this.handleSubmit}>\n    //         <label className=\"form-label\" htmlFor=\"image\">Image</label>\n    //         <input className=\"form-control\"\n    //                type=\"file\"\n    //                name=\"image\"/>\n    //\n    //         <label className=\"form-label\" htmlFor=\"name\">Name</label>\n    //         <input className=\"form-control\"\n    //                type=\"text\"\n    //                name=\"name\"/>\n    //\n    //         <label className=\"form-label\" htmlFor=\"rise_time\">Rise Time</label>\n    //         <input className=\"form-control\" type=\"text\" name=\"rise_time\"/>\n    //\n    //         <label className=\"form-label\" htmlFor=\"set_time\">Set Time</label>\n    //         <input className=\"form-control\" type=\"text\" name=\"set_time\"/>\n    //\n    //         <label htmlFor=\"description\" className=\"form-label\">Description</label>\n    //         <textarea className=\"form-control\" name=\"description\" id=\"\" cols=\"30\" rows=\"10\">\n    //\n    //         </textarea>\n    //\n    //         <button className=\"btn btn-success\">Edit Planet</button>\n    //     </form>;\n    //\n    // }\n\n    render() {\n        const list = this.state.ephems.map((item, index) =>\n            <div key={item.id} className=\"col-sm-4 col-12 mb-3\">\n                <div className=\"card h-100\">\n                    <div className=\"card-header\">\n                        <img src={item.image} alt=\"A planet, star or satellite.\"/>\n                        <h2>{item.name}</h2>\n                    </div>\n                    <p>rise time: {item.rise_time}</p>\n                    <p>set time: {item.set_time}</p>\n                    <button onClick={(event) => this.handleText(event, index)} className=\"btn-primary\">Remind me\n                    </button>\n                    {\n                        this.state.isAdmin\n                            ?\n                            <div className=\"card-footer\">\n                                <button onClick={this.handleEditMode} className=\"btn btn-primary\">Edit</button>\n                                <button className=\"btn btn-danger\">Delete</button>\n                            </div>\n                            :\n                            null\n                    }\n                </div>\n            </div>\n        );\n        return (\n            <>\n                <label htmlFor=\"result\">Search</label>\n                <div className=\"row\">\n                    <input className=\"col-10 mb-5\"\n                           value={this.state.result}\n                           onChange={this.handleInput}\n                           type=\"text\"\n                           name=\"result\"/>\n                    <button onClick={this.handleCheck} className=\"col-2 btn btn-primary mb-5\">Search</button>\n                </div>\n\n                {\n                    !this.state.isEditMode\n                        ?\n                        <div className=\"planet-width\n                                        px-4\n                                        row\">\n                            {list}\n                        </div>\n                        :\n                        this.showForm()\n                }\n            </>\n        );\n    }\n}\n\nexport default EphemList;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Redirect} from 'react-router-dom';\n\nclass EventForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            time: '',\n            target: '',\n            description: '',\n            message: {\n                to: this.props.phone,\n                body: 'Testing 1, 2, 3'\n            }\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                time: this.state.time,\n                ephemeris: this.state.target,\n                description: this.state.description,\n            })\n        };\n\n        await this.handleSMS(event);\n        const response = await fetch('/api/v1/events/', options);\n        this.props.history.push('/events');\n\n        if(response.status === 201 || response.status === 200)\n            return <Redirect to=\"/events\"/>;\n    }\n\n    async handleSMS(event) {\n        event.preventDefault();\n        let currentState = this.state.message;\n        currentState['body'] = `Your viewing target: ${this.state.name} will rise at ${this.state.time}  ${this.state.description}`;\n        this.setState({currentState});\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json'\n            },\n            body: JSON.stringify(this.state.message.body)\n        };\n        await fetch('/api/v1/broadcast/', options);\n\n        this.setState({submitting: true});\n    }\n\n    render() {\n        return (\n            <form className=\"login-register\" onSubmit={(e) => this.handleSubmit(e)}>\n                <h2>Create an Event</h2>\n                <label className=\"form-label\" htmlFor=\"name\">Event Name</label>\n                <input className=\"form-control\" type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"name\"/>\n                <label className=\"form-label\" htmlFor=\"target\">Target</label>\n                <input type=\"text\"\n                       className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"target\"/>\n                <label className=\"form-label\" htmlFor=\"time\">Time</label>\n                <input className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"time\"\n                       type=\"text\"/>\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          name=\"description\"\n                          value={this.state.value}>\n                </textarea>\n                {\n                    this.state.name !== '' && this.state.time !== '' && this.state.target !== '' && this.state.description !== ''\n                    ?\n                    <button className=\"btn btn-success\" type=\"submit\">Create Event</button>\n                    :\n                        <button className=\"btn btn-success\" type=\"submit\" disabled>Create Event</button>\n                 }\n            </form>\n        );\n    }\n\n}\n\nexport default EventForm;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Redirect} from 'react-router-dom';\n\nclass EventDisplay extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            data: [],\n            isEditMode: false,\n            isAdmin: false,\n            name: '',\n            ephemeris: '',\n            time: '',\n        };\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        const options = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                ephemeris: this.state.ephemeris,\n                time: this.state.time,\n                description: this.state.description,\n            })\n        };\n        await fetch(`/api/v1/events/${this.state.id}/`, options);\n        window.location.reload();\n        return <Redirect to='/events'/>;\n    }\n\n    handleDelete(id) {\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken')\n            }\n        };\n        fetch(`/api/v1/events/${id}/`, options);\n        // this.props.history.push('/events');\n        window.location.reload();\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/v1/events/');\n        const data = await response.json();\n        this.setState({data});\n    }\n\n    showForm() {\n        return <form className=\"login-register\" onSubmit={this.handleSubmit}>\n            <label className=\"form-label\" htmlFor=\"name\">Name</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"name\"\n                   value={this.state.name || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"ephemeris\">Target</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"ephemeris\"\n                   value={this.state.ephemeris || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"time\">Time</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"time\"\n                   value={this.state.time || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"description\">Description</label>\n            <textarea className=\"form-control\"\n                      name=\"description\"\n                      onChange={this.handleInput}\n                      value={this.state.description} cols=\"30\" rows=\"10\">\n            </textarea>\n            <button className=\"btn btn-primary\" type=\"submit\">Edit</button>\n        </form>;\n    }\n\n    handleEditMode(e) {\n        this.setState((previousState) => ({isEditMode: !previousState.isEditMode}));\n        this.setState({\n            name: e.name,\n            ephemeris: e.ephemeris,\n            time: e.time,\n            id: e.id,\n            description: e.description\n        });\n    }\n\n    render() {\n        let events = this.state.data?.map(event => <section className=\"card\" key={event.id}>\n            <div className=\"event-card\">\n                <div className=\"card-header\">\n                    <h2>{event.name}</h2>\n                    <p>{event.ephemeris}</p>\n                </div>\n                <p>{event.time}</p>\n                <p>{event.description}</p>\n                <div className=\"button-group card-footer\">\n                    <button onClick={() => this.handleEditMode(event)} className=\"btn btn-primary\">Edit</button>\n                    <button onClick={() => this.handleDelete(event.id)} className=\"btn btn-danger\">Delete\n                    </button>\n                </div>\n            </div>\n        </section>);\n        return (\n            <div className=\"d-flex\">\n                {\n                    !this.state.isEditMode\n                        ?\n                        events\n                        :\n                        this.showForm()\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default EventDisplay;","import {Component} from 'react';\nimport {NavLink, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAdmin: false,\n        };\n\n\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    async handleLogout() {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Authorization': Cookies.get('Authorization'),\n            }\n        };\n        await fetch('/rest-auth/logout/', options);\n        Cookies.remove('csrftoken');\n        Cookies.remove('Authorization');\n        this.state.history.push('/login');\n        return <Redirect to='/login'/>;\n    }\n\n    render() {\n        return (\n            <nav className=\"nav navbar container-fluid navbar-dark\">\n                {\n                    this.props.isLoggedIn\n                        ?\n                        <>\n                            <NavLink className=\"navbar-brand\" to='/home'>Night Watch</NavLink>\n                            <NavLink to=\"/profile\">Profile</NavLink>\n                            <NavLink to=\"/event/form\">Add Event</NavLink>\n                            <NavLink to=\"/celestial-list\">Celestial Events</NavLink>\n                            <NavLink to=\"/events\">Upcoming Events</NavLink>\n                            <NavLink to='/glossary'>Glossary</NavLink>\n                            <NavLink to='/logout' onClick={this.handleLogout}>Logout</NavLink>\n                            {/*<NavLink>Logout</NavLink>*/}\n                        </>\n                        :\n                        <>\n                            <NavLink to='/home'>Home</NavLink>\n                            <NavLink to=\"/register\">Register</NavLink>\n                            <NavLink to=\"/login\">Login</NavLink>\n                        </>\n                }\n                {\n                    this.state.isAdmin\n                        ?\n                        <NavLink to=\"/ephem/form\">Add Planet</NavLink>\n                        :\n                        null\n                }\n            </nav>\n        );\n    }\n}\n\nexport default Navigation;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Redirect} from 'react-router-dom';\n\nclass ProfileForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            profile_picture: '',\n            about_me: '',\n            equipment: '',\n            preview: '',\n            receive_notifications: false,\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCheck = this.handleCheck.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        let formData = new FormData();\n        formData.append('profile_picture', this.state.profile_picture);\n        formData.append('about_me', this.state.about_me);\n        formData.append('equipment', this.state.equipment);\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: formData\n        };\n\n        const response = await fetch('/api/v1/profiles/create/', options);\n        const data = await response.json().catch(error => console.log(error));\n        console.log(data);\n\n        if (response.status === 201)\n            return <Redirect to=\"/profile\"/>;\n    }\n\n    handleImage(event) {\n        let file = event.target.files[0];\n\n        this.setState({profile_picture: file});\n\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            this.setState({preview: reader.result});\n        };\n\n        reader.readAsDataURL(file);\n    }\n\n    handleCheck(event) {\n        this.setState((previousState) => ({\n            receive_notifications: !previousState.receive_notifications\n        }))\n    }\n\n    render() {\n        return (\n            <form className=\"login-register\" onSubmit={(e) => this.handleSubmit(e)}>\n                <h2>Create Your Profile</h2>\n                {\n                    this.state.profile_picture && <img src={this.state.preview} alt=\"preview\"/>\n                }\n                <label className=\"form-label\" htmlFor=\"profile_picture\">Profile Picture</label>\n                <input className=\"form-control\"\n                       onChange={this.handleImage}\n                       type=\"file\"\n                       name=\"profile_picture\"/>\n\n                <label className=\"form-label\" htmlFor=\"location\">City</label>\n                <input className=\"form-control\" type=\"text\" name=\"location\" id=\"location\"/>\n\n                <label className=\"form-label\" htmlFor=\"about_me\">About Me</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          value={this.state.about_me}\n                          name=\"about_me\"\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n\n                <label className=\"form-label\" htmlFor=\"receive_notifications\">Receive Notifications</label>\n                <input className=\"form-group\"\n                       type=\"checkbox\"\n                       onChange={this.handleCheck}\n                       value={this.state.receive_notifications}\n                       name=\"receive_notifications\"/>\n                {\n                    this.state.receive_notifications\n                        ?\n                        <>\n                            <label className=\"form-label\" htmlFor=\"phone_number\">Phone #</label>\n                            <input type=\"tel\"\n                                   className=\"form-control\"\n                                   name=\"phone_number\"\n                                   id=\"phone_number\"\n                                   maxLength={12}\n                                   placeholder=\"for alerting you of astro events\"/>\n                        </>\n                        :\n                        null\n                }\n\n                <button className=\"btn btn-success\" type=\"submit\">Create Profile</button>\n            </form>\n        );\n    }\n}\n\nexport default ProfileForm;","import {Component} from 'react';\n\nclass Home extends Component{\n    render() {\n        return (\n            <>\n                <h2>Welcome to Night Watch</h2>\n                <p>Night Watch is a simple astronomy planning app, register or login to view more!</p>\n            </>\n        );\n    }\n}\n\nexport default Home","import {Component} from 'react'\n\nclass About extends Component{\n    render() {\n        return (\n            <div>\n                About\n            </div>\n        );\n    }\n}\n\nexport default About","import {Component} from 'react';\n\nclass Glossary extends Component{\n    render() {\n        return (\n            <div>\n                Glossary\n            </div>\n        );\n    }\n}\n\nexport default Glossary;","import {Component} from 'react';\n\n// This is a test, only a test.\nclass SMSForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: {\n                to: '',\n                body: ''\n            },\n            submitting: false,\n            error: false\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({\n            message: {...this.state.message, [event.target.name]: event.target.value}\n        });\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json'\n            },\n            body: JSON.stringify(this.state.message)\n        };\n        await fetch('/api/v1/broadcast/', options);\n\n        this.setState({submitting: true});\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className=\"login-register\">\n                <h2>Set Reminder</h2>\n                <label className=\"form-label\" htmlFor=\"to\">Phone #:</label>\n                <input className=\"form-control\"\n                       value={this.state.message.to}\n                       onChange={this.handleInput}\n                       type=\"tel\"\n                       name=\"to\"\n                       id=\"to\"/>\n\n                <label className=\"form-label\" htmlFor=\"body\">Body:</label>\n                <textarea className=\"form-control\"\n                          name=\"body\"\n                          id=\"body\"\n                          value={this.state.message.body}\n                          onChange={this.handleInput}\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n                <button className=\"btn btn-success\">Remind Me</button>\n            </form>\n        );\n    }\n}\n\nexport default SMSForm;","import './App.css';\nimport Register from './components/user/Register';\nimport Login from './components/user/Login';\nimport Profile from './components/user/Profile';\nimport {Switch, Route} from 'react-router-dom';\nimport {Component} from 'react';\nimport EphemForm from './components/ephem/EphemForm';\nimport EphemDisplay from './components/ephem/EphemDisplay';\nimport EphemList from './components/ephem/EphemList';\nimport EventForm from './components/events/EventForm';\nimport EventDisplay from './components/events/EventDisplay';\nimport Navigation from './components/Navigation';\nimport Cookies from 'js-cookie';\nimport ProfileForm from './components/user/ProfileForm';\nimport Home from './components/pages/Home';\nimport About from './components/pages/About';\nimport Glossary from './components/pages/Glossary';\nimport SMSForm from './components/ephem/SMSForm';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: !!Cookies.get('Authorization'),\n            isAdmin: false,\n            user: {\n                user: '',\n                profile_picture: '',\n                about_me: '',\n                my_equipment: [],\n                phone: '',\n            }\n        };\n        this.handleIsLoggedIn = this.handleIsLoggedIn.bind(this);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('api/v1/profiles/details');\n        const data = await response.json();\n\n\n        this.setState({\n            user: {\n                user: data.user,\n                profile_picture: data.profile_picture,\n                about_me: data.about_me,\n                my_equipment: data.my_equipment,\n                phone: data.phone\n            }\n        });\n    }\n\n\n    handleIsLoggedIn() {\n        this.setState((previousState) => ({isLoggedIn: !previousState.isLoggedIn}));\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Navigation isLoggedIn={this.state.isLoggedIn}/>\n                <Switch>\n                    <Route path='/home' component={Home}/>\n                    <Route path='/about' component={About}/>\n                    <Route path='/glossary' component={Glossary}/>\n                    <Route path='/register' component={Register}/>\n                    <Route path='/login' render={(props) => (<Login {...props} isLoggedIn={this.state.isLoggedIn}\n                                                                    handleIsLoggedIn={this.handleIsLoggedIn}/>)}/>\n                    <Route path=\"/profile\"\n                           render={(props) => (<Profile {...props} user={this.state.user}\n                                                        handleIsLoggedIn={this.handleIsLoggedIn}/>)}/>\n                    <Route path=\"/create-profile\" component={ProfileForm}/>\n                    <Route path=\"/ephem/form\" component={EphemForm}/>\n                    <Route path=\"/event/form\" render={(props) => (<EventForm {...props} phone={this.state.user.phone}/>)}/>\n                    <Route path=\"/display\" component={EphemDisplay}/>\n                    <Route path=\"/celestial-list\" component={EphemList}/>\n                    <Route path=\"/events\" component={EventDisplay}/>\n                    <Route path='/sms-form' component={SMSForm}/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}