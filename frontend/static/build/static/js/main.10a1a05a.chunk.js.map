{"version":3,"sources":["components/user/Register.js","components/user/Login.js","components/user/Profile.js","components/ephem/EphemForm.js","components/ephem/EphemDisplay.js","components/ephem/EphemList.js","components/EventForm.js","App.js","reportWebVitals.js","index.js"],"names":["Register","props","state","username","email","password1","password2","handleInput","bind","handleSubmit","event","this","setState","target","name","value","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","json","data","console","log","className","onSubmit","e","htmlFor","onChange","type","to","Component","Login","password","key","set","Profile","remove","src","alt","onClick","handleLogout","EphemForm","rise_time","set_time","magnitude","image","description","preview","handleImage","dir","file","files","reader","FileReader","onloadend","result","readAsDataURL","formData","FormData","append","valu","cols","rows","EphemDisplay","ephem","ephems","map","EphemList","list","item","id","EventForm","App","isLoggedIn","previousState","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10a1a05a.chunk.js","sourcesContent":["import {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: '',\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        // const options = {\n        //     username: this.state.username,\n        //     email: this.state.email,\n        //     password1: this.state.password1,\n        //     password2: this.state.password2,\n        // }\n        // const headers = {\n        //     \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n        // }\n        // // axios.post('/rest-auth/registration/', user, headers).then(x => x)\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                email: this.state.email,\n                password1: this.state.password1,\n                password2: this.state.password2})\n        }\n        const response = await fetch('/rest-auth/registration/', options)\n        const data = await response.json();\n\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"login-register\" onSubmit={(e) => this.handleSubmit(e)}>\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput} value={this.state.username} className=\"form-control\" type=\"text\"\n                           name=\"username\"/>\n                    <label className=\"form-label\" htmlFor=\"email\">Email</label>\n                    <input onChange={this.handleInput} value={this.state.email} className=\"form-control\" type=\"email\"\n                           name=\"email\"/>\n                    <label className=\"form-label\" htmlFor=\"password1\">Password</label>\n                    <input onChange={this.handleInput} value={this.state.password1} className=\"form-control\"\n                           type=\"password\" name=\"password1\"/>\n                    <label className=\"form-label\" htmlFor=\"password2\">Confirm Password</label>\n                    <input onChange={this.handleInput} value={this.state.password2} className=\"form-control mb-3\"\n                           type=\"password\" name=\"password2\"/>\n                    <button className=\"btn btn-success\" type=\"submit\">Register</button>\n                    <p>Already have an account? Why don't you <Link to=\"/login\">Login</Link>? </p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Register;","import {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        // const user = {\n        //     username: this.state.username,\n        //     password: this.state.password\n        // }\n        // axios.post('/rest-auth/login/', user).then(x => x)\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n            })\n        }\n\n        const response = await fetch('/rest-auth/login/', options);\n        const data = await response.json();\n\n        if(data.key) {\n            Cookies.set(\"Authorization\", `Token ${data.key}`)\n        } else {\n            console.log(\"Did not log in.\");\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"text-center login-register\" onSubmit={this.handleSubmit}>\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput} className=\"form-control\" type=\"text\" name=\"username\"/>\n                    <label className=\"form-label\" htmlFor=\"password\">Password</label>\n                    <input onChange={this.handleInput} className=\"form-control mb-3\" type=\"password\" name=\"password\" />\n                    <button className=\"btn btn-success\">Login</button>\n                    <p>Don't have an account yet? Why not <Link to=\"/register\">Register</Link> First?</p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Login;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass Profile extends Component {\n\n    handleLogout() {\n        Cookies.remove('Authorization');\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Username</h1>\n                <img src=\"#\" alt=\"user\"/>\n                <p>About me</p>\n                <p>My equipment</p>\n                <button onClick={this.handleLogout} className=\"btn btn-danger\">Logout</button>\n            </>\n        );\n    }\n}\n\nexport default Profile;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass EphemForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            rise_time: '',\n            set_time: '',\n            magnitude: 0,\n            image: '',\n            description: '',\n            preview: '',\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleImage(e) {\n        console.dir('test', e.target);\n        let file = e.target.files[0];\n        this.setState({ image: file });\n        let reader = new FileReader();\n        reader.onloadend = () => {\n            this.setState({\n                preview: reader.result\n            });\n        };\n        reader.readAsDataURL(file);\n    }\n\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        let formData = new FormData();\n        // TODO for in.\n        formData.append('image', this.state.image);\n        formData.append('name', this.state.name);\n        formData.append('rise_time', this.state.rise_time);\n        formData.append('set_time', this.state.set_time);\n        formData.append('magnitude', this.state.magnitude);\n        formData.append('description', this.state.description);\n        const options = {\n            method: 'POST',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: formData\n        };\n\n        const response = await fetch('/api/v1/ephem/', options);\n        const data = await response.json();\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <form onSubmit={(e) => this.handleSubmit(e, this.state)}>\n                <label className=\"form-label\" htmlFor=\"name\">Name</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.name}\n                       name=\"name\"/>\n                <label className=\"form-label\" htmlFor=\"rise_time\">Rise Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.rise_time}\n                       name=\"rise_time\"/>\n                <label className=\"form-label\" htmlFor=\"set_time\">Set Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       valu={this.state.set_time}\n                       name=\"set_time\"/>\n                <label className=\"form-label\" htmlFor=\"magnitude\">Magnitude</label>\n                <input className=\"form-control\"\n                       type=\"number\"\n                       onChange={this.handleInput}\n                       value={this.state.magnitude}\n                       name=\"magnitude\"/>\n                <label className=\"form-label\" htmlFor=\"image\">Image</label>\n                <input className=\"form-control\"\n                       type=\"file\"\n                       onChange={this.handleImage}\n                       name=\"image\"/>\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          value={this.state.description}\n                          name=\"description\"\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n}\n\nexport default EphemForm;","import {Component} from 'react';\n\nclass EphemDisplay extends Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ephem: [],\n        }\n    }\n\n    async componentDidMount() {\n        const response =  await fetch(\"/api/v1/ephem/\");\n        const data = await response.json();\n\n        this.setState({ephem: data})\n        console.log(this.state);\n    }\n\n    render() {\n        const ephems = this.state.ephem.map(ephem => <section>\n            <img src={ephem.image} alt=\"The sun.\"/>\n            <h1>{ephem.name}</h1>\n            <p>Rise time: </p>\n            <h2>{ephem.rise_time}</h2>\n            <p>Set time: </p>\n            <h2>{ephem.set_time}</h2>\n        </section>);\n        return (\n            <>\n                {ephems[0]}\n            </>\n        );\n    }\n}\n\nexport default EphemDisplay","import {Component} from 'react';\n\nclass EphemList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ephems: [],\n        };\n    }\n\n    async componentDidMount() {\n        const response = await fetch('api/v1/ephem/');\n        const data = await response.json();\n        this.setState({ephems: data});\n    }\n\n    render() {\n        const list = this.state.ephems.map(item => <section key={item.id} className=\"row\">\n            <div className=\"col\">\n                <img src={item.image}/>\n                <h2>{item.name}</h2>\n                <p>rise time: {item.rise_time}</p>\n                <p>set time: {item.set_time}</p>\n            </div>\n        </section>);\n        return (\n            <div className=\"container\">\n                {list}\n            </div>\n        );\n    }\n}\n\nexport default EphemList;","import {Component} from 'react';\nclass EventForm extends Component {\n\n    render() {\n        return (\n            <form>\n                EventForm\n            </form>\n        );\n    }\n\n}\n\nexport default EventForm","import './App.css';\nimport Register from './components/user/Register';\nimport Login from './components/user/Login';\nimport Profile from './components/user/Profile';\nimport {Switch, Route} from 'react-router-dom';\nimport {Component} from 'react';\nimport EphemForm from './components/ephem/EphemForm';\nimport EphemDisplay from './components/ephem/EphemDisplay';\nimport EphemList from './components/ephem/EphemList';\nimport EventForm from './components/EventForm';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: false,\n        };\n    }\n\n    handleIsLoggedIn() {\n        this.setState((previousState) => ({isLoggedIn: !previousState.isLoggedIn}));\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Switch>\n                    <Route path='/register' component={Register}/>\n                    <Route path='/login' component={Login}/>\n                    <Route path=\"/profile\" component={Profile}/>\n                    <Route path=\"/ephem/form\" component={EphemForm}/>\n                    <Route path=\"/event/form\"  component={EventForm}/>\n                    <Route path=\"/display\" component={EphemDisplay} />\n                    <Route path=\"/list\" component={EphemList}/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}