{"version":3,"sources":["components/user/Register.js","components/user/Login.js","components/user/Profile.js","components/ephem/EphemForm.js","components/ephem/EphemDisplay.js","components/ephem/EphemList.js","components/events/EventForm.js","components/events/EventDisplay.js","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Register","props","state","username","email","password1","password2","usernameStatus","emailStatus","password1Status","password2Status","profile_picture","equipment","about_me","handleInput","bind","handleSubmit","event","this","setState","target","name","value","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","json","data","console","log","status","set","key","className","onSubmit","e","htmlFor","onChange","type","placeholder","cols","rows","to","Component","Login","password","statusMessage","isLoggedIn","Profile","handleLogout","remove","src","alt","onClick","EphemForm","rise_time","set_time","magnitude","image","description","preview","handleImage","dir","file","files","reader","FileReader","onloadend","result","readAsDataURL","formData","FormData","append","EphemDisplay","ephem","ephems","map","EphemList","isEditMode","isAdmin","handleEditMode","item","action","id","list","showForm","EventForm","time","ephemeris","EventDisplay","handleDelete","previousState","events","Navigation","App","handleIsLoggedIn","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13292b7b.chunk.js","sourcesContent":["import {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: '',\n            usernameStatus: '',\n            emailStatus: '',\n            password1Status: '',\n            password2Status: '',\n            profile_picture: '',\n            equipment: '',\n            about_me: '',\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                email: this.state.email,\n                password1: this.state.password1,\n                password2: this.state.password2,\n                equipment: this.state.equipment,\n                profile_picture: this.state.profile_picture,\n                about_me: this.state.about_me\n            })\n        };\n        const response = await fetch('/rest-auth/registration/', options);\n        const data = await response.json();\n        console.log(data);\n        if (response.status !== 201) {\n            // Done this way to prevent multiple errors.\n            // this.setState({usernameStatus: data.username[0]});\n            // this.setState({emailStatus: data.email[0]});\n            // this.setState({password1Status: data.password1[0]});\n            // this.setState({password2Status: data.password2[0]});\n            console.log('Not logged in!');\n        } else {\n            Cookies.set('Authorization', `Token ${data.key}`);\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"login-register\" onSubmit={(e) => this.handleSubmit(e)}>\n                    <h2>Register</h2>\n                    {this.state.usernameStatus !== '' ? <div>{this.state.usernameStatus}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput}\n                           value={this.state.username}\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"username\"/>\n\n                    {this.state.emailStatus !== '' ? <div>{this.state.emailStatus}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"email\">Email</label>\n                    <input onChange={this.handleInput}\n                           value={this.state.email}\n                           className=\"form-control\"\n                           type=\"email\"\n                           name=\"email\"/>\n                    <div className=\"row g-3\">\n                        <div className=\"col\">\n                            {this.password1Status !== '' ? <div>{this.state.password1Status}</div> : null}\n                            <label className=\"form-label\" htmlFor=\"password1\">Password</label>\n                            <input onChange={this.handleInput}\n                                   value={this.state.password1}\n                                   className=\"form-control\"\n                                   type=\"password\"\n                                   name=\"password1\"/>\n                        </div>\n                        <div className=\"col\">\n                            {this.password2Status !== '' ? <div>{this.state.password2Status}</div> : null}\n                            <label className=\"form-label\" htmlFor=\"password2\">Confirm Password</label>\n                            <input onChange={this.handleInput}\n                                   value={this.state.password2}\n                                   className=\"form-control mb-3\"\n                                   type=\"password\"\n                                   name=\"password2\"/>\n                        </div>\n                    </div>\n\n                    <label className=\"form-label\" htmlFor=\"equipment\">Equipment</label>\n                    <input className=\"form-control\"\n                           type=\"text\"\n                           onChange={this.handleInput}\n                           value={this.state.equipment}\n                           name=\"equipment\"\n                           placeholder=\"Your eyes are perfectly valid astronomy tools.\"/>\n\n                    <label className=\"form-label\" htmlFor=\"profile_picture\">Profile Image</label>\n                    <input className=\"form-control\"\n                           onChange={this.handleInput}\n                           value={this.state.profile_picture}\n                           type=\"file\"\n                           name=\"profile_picture\"/>\n\n                    <label className=\"form-label\" htmlFor=\"about_me\">About Me</label>\n                    <textarea className=\"form-control\"\n                              value={this.state.about_me}\n                              onChange={this.handleInput}\n                              name=\"about_me\"\n                              cols=\"30\"\n                              rows=\"10\">\n                    </textarea>\n                    <button className=\"btn btn-success\" type=\"submit\">Register</button>\n                    <p>Already have an account? Why don't you <Link to=\"/login\">Login</Link>? </p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Register;","import {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            statusMessage: '',\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n            })\n        };\n\n        const response = await fetch('/rest-auth/login/', options);\n        const data = await response.json();\n\n        console.log(data);\n        if (data.key) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n            console.log(this.props.isLoggedIn);\n            return  this.props.isLoggedIn ? <Redirect to=\"/celestial-list\"/> : null;\n        } else {\n            if (response.status !== 200) {\n                // this.setState({statusMessage: data})\n                // if (data.)\n                console.log('Login unsuccessful.');\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"text-center login-register\" onSubmit={this.handleSubmit}>\n                    <h2>Login</h2>\n                    {this.state.statusMessage !== '' ? <div>{this.state.statusMessage}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput}\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"username\"/>\n                    <label className=\"form-label\" htmlFor=\"password\">Password</label>\n                    <input onChange={this.handleInput}\n                           className=\"form-control mb-3\"\n                           type=\"password\"\n                           name=\"password\"/>\n                    <button className=\"btn btn-success\">Login</button>\n                    <p>Don't have an account yet? Why not <Link to=\"/register\">Register</Link> First?</p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Login;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    async componentDidMount() {\n        const response = await fetch(\"/rest-auth/user/\");\n        const data = await response.json();\n        console.log(data);\n    }\n\n\n    handleLogout() {\n        Cookies.remove('Authorization');\n    }\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <h1>Username</h1>\n                    <img src=\"#\" alt=\"user\"/>\n                    <p>About me</p>\n                </div>\n                <div className=\"card-footer\">\n                    <p>My equipment</p>\n                <button onClick={this.handleLogout} className=\"btn btn-danger\">Logout</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass EphemForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            rise_time: '',\n            set_time: '',\n            magnitude: 0,\n            image: '',\n            description: '',\n            preview: '',\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleImage(e) {\n        console.dir('test', e.target);\n        let file = e.target.files[0];\n        this.setState({ image: file });\n        let reader = new FileReader();\n        reader.onloadend = () => {\n            this.setState({\n                preview: reader.result\n            });\n        };\n        reader.readAsDataURL(file);\n    }\n\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        let formData = new FormData();\n        // TODO for in.\n        formData.append('image', this.state.image);\n        formData.append('name', this.state.name);\n        formData.append('rise_time', this.state.rise_time);\n        formData.append('set_time', this.state.set_time);\n        formData.append('magnitude', this.state.magnitude);\n        formData.append('description', this.state.description);\n        const options = {\n            method: 'POST',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: formData\n        };\n\n        const response = await fetch('/api/v1/ephem/', options);\n        const data = await response.json();\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <form onSubmit={(e) => this.handleSubmit(e, this.state)}>\n                <label className=\"form-label\" htmlFor=\"name\">Name</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.name}\n                       name=\"name\"/>\n                <label className=\"form-label\" htmlFor=\"rise_time\">Rise Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.rise_time}\n                       name=\"rise_time\"/>\n                <label className=\"form-label\" htmlFor=\"set_time\">Set Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.set_time}\n                       name=\"set_time\"/>\n                <label className=\"form-label\" htmlFor=\"magnitude\">Magnitude</label>\n                <input className=\"form-control\"\n                       type=\"number\"\n                       onChange={this.handleInput}\n                       value={this.state.magnitude}\n                       name=\"magnitude\"/>\n                <label className=\"form-label\" htmlFor=\"image\">Image</label>\n                <input className=\"form-control\"\n                       type=\"file\"\n                       onChange={this.handleImage}\n                       name=\"image\"/>\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          value={this.state.description}\n                          name=\"description\"\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n}\n\nexport default EphemForm;","import {Component} from 'react';\n\nclass EphemDisplay extends Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ephem: [],\n        }\n    }\n\n    async componentDidMount() {\n        const response =  await fetch(\"/api/v1/ephem/\");\n        const data = await response.json();\n\n        this.setState({ephem: data})\n        console.log(this.state);\n    }\n\n    render() {\n        const ephems = this.state.ephem.map(ephem => <section>\n            <img src={ephem.image} alt=\"The sun.\"/>\n            <h1>{ephem.name}</h1>\n            <p>Rise time: </p>\n            <h2>{ephem.rise_time}</h2>\n            <p>Set time: </p>\n            <h2>{ephem.set_time}</h2>\n        </section>);\n        return (\n            <>\n                {ephems[0]}\n            </>\n        );\n    }\n}\n\nexport default EphemDisplay","import {Component} from 'react';\n\nclass EphemList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ephems: [],\n            isEditMode: false,\n            isAdmin: false,\n        };\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('api/v1/ephem/');\n        const data = await response.json();\n        this.setState({ephems: data});\n        console.log(this.state.ephems);\n    }\n\n    handleEditMode() {\n        this.setState({isEditMode: true});\n    }\n\n    handleSubmit() {\n        this.setState({isEditMode: false});\n    }\n\n    showForm(item) {\n        return <form action=\"\" onSubmit={this.handleSubmit}>\n            <label className=\"form-label\" htmlFor=\"image\">Image</label>\n            <input className=\"form-control\"\n                   type=\"file\"\n                   name=\"image\"/>\n\n            <label className=\"form-label\" htmlFor=\"name\">Name</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   name=\"name\"/>\n\n            <label className=\"form-label\" htmlFor=\"rise_time\">Rise Time</label>\n            <input className=\"form-control\" type=\"text\" name=\"rise_time\"/>\n\n            <label className=\"form-label\" htmlFor=\"set_time\">Set Time</label>\n            <input className=\"form-control\" type=\"text\" name=\"set_time\"/>\n\n            <label htmlFor=\"description\" className=\"form-label\">Description</label>\n            <textarea className=\"form-control\" name=\"description\" id=\"\" cols=\"30\" rows=\"10\">\n\n            </textarea>\n\n            <button className=\"btn btn-success\">Edit Planet</button>\n        </form>;\n\n    }\n\n    render() {\n        const list = this.state.ephems.map(item => <section key={item.id} className=\"row\">\n            <div className=\"col\">\n                <img src={item.image} alt=\"A planet, star or satellite.\"/>\n                <h2>{item.name}</h2>\n                <p>rise time: {item.rise_time}</p>\n                <p>set time: {item.set_time}</p>\n                {\n                    this.state.isAdmin\n                        ?\n                        <>\n                            <button onClick={this.handleEditMode} className=\"btn btn-primary\">Edit</button>\n                            <button className=\"btn btn-danger\">Delete</button>\n                        </>\n                        :\n                        null\n                }\n\n            </div>\n        </section>);\n        return (\n            <div className=\"container\">\n                {\n                    !this.state.isEditMode\n                        ?\n                        list\n                        :\n                        this.showForm()\n                }\n            </div>\n        );\n    }\n}\n\nexport default EphemList;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass EventForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            time: '',\n            target: '',\n            description: '',\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"Application/Json\",\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                time: this.state.time,\n                ephemeris: this.state.target,\n                description: this.state.description\n            })\n        };\n        const response = await fetch('/api/v1/events/', options);\n        const data = await response.json();\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <form className=\"login-register\" onSubmit={this.handleSubmit}>\n                <label className=\"form-label\" htmlFor=\"name\">Event Name</label>\n                <input className=\"form-control\" type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"name\"/>\n                <label className=\"form-label\" htmlFor=\"target\">Target</label>\n                <input type=\"text\"\n                       className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"target\"/>\n                <label className=\"form-label\" htmlFor=\"time\">Time</label>\n                <input className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"time\"\n                       type=\"text\"/>\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          name=\"description\"\n                          value={this.state.value}>\n                </textarea>\n                <button className=\"btn btn-success\" type=\"submit\">Create Event</button>\n            </form>\n        );\n    }\n\n}\n\nexport default EventForm;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass EventDisplay extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            data: [],\n            isEditMode: false,\n            isAdmin: false,\n            name: '',\n            ephemeris: '',\n            time: '',\n        };\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        const options = {\n            method: 'PUT',\n            headers: {\n                \"Content-Type\":\"Application/Json\",\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                ephemeris: this.state.ephemeris,\n                time: this.state.time\n            })\n        };\n        await fetch(`/api/v1/events/${this.state.id}/`, options);\n    }\n\n    handleDelete(id) {\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken')\n            }\n        };\n        fetch(`/api/v1/events/${id}/`, options);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/v1/events/');\n        const data = await response.json();\n        this.setState({data});\n    }\n\n    showForm() {\n        return <form className=\"login-register\" onSubmit={this.handleSubmit}>\n            <label className=\"form-label\" htmlFor=\"name\">Name</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"name\"\n                   value={this.state.name || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"ephemeris\">Target</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"ephemeris\"\n                   value={this.state.ephemeris || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"time\">Time</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"time\"\n                   value={this.state.time || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"description\">Description</label>\n            <textarea className=\"form-control\" name=\"description\" value={this.state.description} cols=\"30\" rows=\"10\">\n            </textarea>\n            <button className=\"btn btn-primary\" type=\"submit\">Edit</button>\n        </form>;\n    }\n\n    handleEditMode(e) {\n        this.setState((previousState) => ({isEditMode: !previousState.isEditMode}));\n        this.setState({\n            name: e.name,\n            ephemeris: e.ephemeris, time: e.time, id: e.id\n        });\n    }\n\n    render() {\n        let events = this.state.data?.map(event => <section key={event.id}>\n            <>\n                <h2>{event.name}</h2>\n                <p>{event.ephemeris}</p>\n                <p>{event.time}</p>\n                <p>{event.description}</p>\n                <div className=\"button-group\">\n                    <button onClick={() => this.handleEditMode(event)} className=\"btn btn-primary\">Edit</button>\n                    <button onClick={() => this.handleDelete(event.id)} className=\"btn btn-danger\">Delete\n                    </button>\n                </div>\n            </>\n        </section>);\n        return (\n            <>\n                {\n                    !this.state.isEditMode\n                        ?\n                        events\n                        :\n                        this.showForm()\n                }\n            </>\n        );\n    }\n\n}\n\nexport default EventDisplay;","import {Component} from 'react';\nimport {NavLink} from 'react-router-dom';\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAdmin: false,\n        };\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar container-fluid navbar-dark\">\n                <NavLink to=\"/register\">Register</NavLink>\n                <NavLink to=\"/login\">Login</NavLink>\n                {/*TODO only when logged in*/}\n                <NavLink to=\"/profile\">Profile</NavLink>\n                {/*TODO Only as admin.*/}\n                {/*<NavLink to=\"/ephem/form\">Add Planet</NavLink>*/}\n                <NavLink to=\"/event/form\">Add Event</NavLink>\n                <NavLink to=\"/celestial-list\">Planets</NavLink>\n                <NavLink to=\"/events\">Upcoming Events</NavLink>\n            </nav>\n        );\n    }\n}\n\nexport default Navigation;","import './App.css';\nimport Register from './components/user/Register';\nimport Login from './components/user/Login';\nimport Profile from './components/user/Profile';\nimport {Switch, Route} from 'react-router-dom';\nimport {Component} from 'react';\nimport EphemForm from './components/ephem/EphemForm';\nimport EphemDisplay from './components/ephem/EphemDisplay';\nimport EphemList from './components/ephem/EphemList';\nimport EventForm from './components/events/EventForm';\nimport EventDisplay from './components/events/EventDisplay';\nimport Navigation from './components/Navigation';\nimport Cookies from 'js-cookie';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: !!Cookies.get(\"Authorization\"),\n            isAdmin: false,\n        };\n        this.handleIsLoggedIn = this.handleIsLoggedIn.bind(this);\n    }\n\n    handleIsLoggedIn() {\n        this.setState((previousState) => ({isLoggedIn: !previousState.isLoggedIn}));\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Navigation isLoggedIn={this.state.isLoggedIn}/>\n                <Switch>\n                    <Route path='/register' component={Register}/>\n                    <Route path='/login' render={(props) => (<Login {...props} isLoggedIn={this.state.isLoggedIn} />)} />\n                    <Route path=\"/profile\" component={Profile}/>\n                    <Route path=\"/ephem/form\" component={EphemForm}/>\n                    <Route path=\"/event/form\"  component={EventForm}/>\n                    <Route path=\"/display\" component={EphemDisplay} />\n                    <Route path=\"/celestial-list\" component={EphemList}/>\n                    <Route path=\"/events\" component={EventDisplay}/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}