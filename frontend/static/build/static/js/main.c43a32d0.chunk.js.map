{"version":3,"sources":["components/user/Register.js","components/user/Login.js","components/user/Profile.js","components/EphemForm.js","components/EphemDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["Register","props","state","username","email","password1","password2","handleInput","bind","handleSubmit","event","this","setState","target","name","value","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","json","data","console","log","className","onSubmit","e","htmlFor","onChange","type","to","Component","Login","password","key","set","Profile","remove","src","alt","onClick","handleLogout","EphemForm","cols","rows","EphemDisplay","App","isLoggedIn","previousState","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c43a32d0.chunk.js","sourcesContent":["import {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: '',\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        // const options = {\n        //     username: this.state.username,\n        //     email: this.state.email,\n        //     password1: this.state.password1,\n        //     password2: this.state.password2,\n        // }\n        // const headers = {\n        //     \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n        // }\n        // // axios.post('/rest-auth/registration/', user, headers).then(x => x)\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                email: this.state.email,\n                password1: this.state.password1,\n                password2: this.state.password2})\n        }\n        const response = await fetch('/rest-auth/registration/', options)\n        const data = await response.json();\n\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"login-register\" onSubmit={(e) => this.handleSubmit(e)}>\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput} value={this.state.username} className=\"form-control\" type=\"text\"\n                           name=\"username\"/>\n                    <label className=\"form-label\" htmlFor=\"email\">Email</label>\n                    <input onChange={this.handleInput} value={this.state.email} className=\"form-control\" type=\"email\"\n                           name=\"email\"/>\n                    <label className=\"form-label\" htmlFor=\"password1\">Password</label>\n                    <input onChange={this.handleInput} value={this.state.password1} className=\"form-control\"\n                           type=\"password\" name=\"password1\"/>\n                    <label className=\"form-label\" htmlFor=\"password2\">Confirm Password</label>\n                    <input onChange={this.handleInput} value={this.state.password2} className=\"form-control mb-3\"\n                           type=\"password\" name=\"password2\"/>\n                    <button className=\"btn btn-success\" type=\"submit\">Register</button>\n                    <p>Already have an account? Why don't you <Link to=\"/login\">Login</Link>? </p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Register;","import {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        // const user = {\n        //     username: this.state.username,\n        //     password: this.state.password\n        // }\n        // axios.post('/rest-auth/login/', user).then(x => x)\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n            })\n        }\n\n        const response = await fetch('/rest-auth/login/', options);\n        const data = await response.json();\n\n        if(data.key) {\n            Cookies.set(\"Authorization\", `Token ${data.key}`)\n        } else {\n            console.log(\"Did not log in.\");\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"text-center login-register\" onSubmit={this.handleSubmit}>\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput} className=\"form-control\" type=\"text\" name=\"username\"/>\n                    <label className=\"form-label\" htmlFor=\"password\">Password</label>\n                    <input onChange={this.handleInput} className=\"form-control mb-3\" type=\"password\" name=\"password\" />\n                    <button className=\"btn btn-success\">Login</button>\n                    <p>Don't have an account yet? Why not <Link to=\"/register\">Register</Link> First?</p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Login;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass Profile extends Component {\n\n    handleLogout() {\n        Cookies.remove('Authorization');\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Username</h1>\n                <img src=\"#\" alt=\"user\"/>\n                <p>About me</p>\n                <p>My equipment</p>\n                <button onClick={this.handleLogout} className=\"btn btn-danger\">Logout</button>\n            </>\n        );\n    }\n}\n\nexport default Profile;","import {Component} from 'react';\n\nclass EphemForm extends Component{\n    render() {\n        return (\n            <form>\n                <label className=\"form-label\" htmlFor=\"name\">Name</label>\n                <input className=\"form-control\" type=\"text\" name=\"name\"/>\n                <label className=\"form-label\" htmlFor=\"rise_time\">Rise Time</label>\n                <input className=\"form-control\" type=\"text\" name=\"rise_time\"/>\n                <label className=\"form-label\" htmlFor=\"set_time\">Set Time</label>\n                <input className=\"form-control\" type=\"text\" name=\"set_time\"/>\n                <label className=\"form-label\" htmlFor=\"magnitude\">Magnitude</label>\n                <input className=\"form-control\" type=\"number\" name=\"magnitude\"/>\n                <label className=\"form-label\" htmlFor=\"image\">Image</label>\n                <input className=\"form-control\" type=\"file\" name=\"image\"/>\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea name=\"description\" cols=\"30\" rows=\"10\"></textarea>\n                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n}\n\nexport default EphemForm","import {Component} from 'react';\n\nclass EphemDisplay extends Component{\n    render() {\n        return (\n            <div>\n                EphemDisplay\n            </div>\n        );\n    }\n}\n\nexport default EphemDisplay","import './App.css';\nimport Register from './components/user/Register';\nimport Login from './components/user/Login';\nimport Profile from './components/user/Profile';\nimport {Switch, Route} from 'react-router-dom';\nimport {Component} from 'react';\nimport EphemForm from './components/EphemForm';\nimport EphemDisplay from './components/EphemDisplay';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: false,\n        };\n    }\n\n    handleIsLoggedIn() {\n        this.setState((previousState) => ({isLoggedIn: !previousState.isLoggedIn}));\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Switch>\n                    <Route path='/register' component={Register}/>\n                    <Route path='/login' component={Login}/>\n                    <Route path=\"/profile\" component={Profile}/>\n                    <Route path=\"/ephem/form\" component={EphemForm}/>\n                    <Route path=\"/display\" component={EphemDisplay} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}