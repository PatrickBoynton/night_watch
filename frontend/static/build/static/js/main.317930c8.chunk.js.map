{"version":3,"sources":["components/user/Register.js","components/user/Login.js","components/user/Profile.js","components/ephem/EphemForm.js","components/ephem/EphemDisplay.js","components/ephem/EphemList.js","components/events/EventForm.js","components/events/EventDisplay.js","components/Navigation.js","components/user/ProfileForm.js","components/pages/Home.js","components/pages/About.js","components/pages/Glossary.js","components/ephem/SMSForm.js","App.js","reportWebVitals.js","index.js"],"names":["Register","props","state","username","email","password1","password2","formErrors","other","handleInput","bind","handleSubmit","event","this","setState","target","name","value","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","json","data","console","log","ok","set","key","history","push","to","className","onSubmit","e","htmlFor","onChange","type","required","disabled","Component","Login","password","statusMessage","handleIsLoggedIn","setTimeout","clearTimeout","Profile","handleLogout","remove","user","src","profile_picture","alt","onClick","about_me","EphemForm","rise_time","set_time","magnitude","image","description","preview","handleImage","file","files","reader","FileReader","onloadend","result","readAsDataURL","formData","FormData","append","cols","rows","EphemDisplay","ephem","ephems","map","EphemList","message","isEditMode","isAdmin","submitting","error","handleEditMode","handleText","handleCheck","showResults","profile","profileData","currentState","phone","id","filter","results","x","list","item","index","showForm","includes","EventForm","time","ephemeris","handleSMS","status","EventDisplay","handleDelete","window","location","reload","previousState","events","Navigation","isLoggedIn","withRouter","ProfileForm","equipment","receive_notifications","catch","maxLength","placeholder","Home","About","Glossary","SMSForm","App","my_equipment","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.317930c8.chunk.js","sourcesContent":["import {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: '',\n            formErrors: {\n                email: '',\n                username: '',\n                other: '',\n            }\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                email: this.state.email,\n                password1: this.state.password1,\n                password2: this.state.password2,\n            })\n        };\n        const response = await fetch('/rest-auth/registration/', options);\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n            this.props.history.push('/create-profile');\n            return <Redirect to=\"/create-profile\"/>;\n        } else {\n            console.log(data);\n            this.setState({formErrors: {username: data.username, email: data.email}});\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"login-register needs-validation\" onSubmit={(e) => this.handleSubmit(e)}>\n                    <h2>Register</h2>\n                    {this.state.formErrors.username !== '' ?\n                        <div className=\"alert-danger\">{this.state.formErrors.username}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput}\n                           value={this.state.username}\n                           className=\"form-control needs-validation\"\n                           type=\"text\"\n                           name=\"username\"\n                           required/>\n\n                    {this.state.formErrors.email !== '' ?\n                        <div className=\"alert-danger\">{this.state.formErrors.email}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"email\">Email</label>\n                    <input onChange={this.handleInput}\n                           value={this.state.email}\n                           className=\"form-control needs-validation\"\n                           type=\"email\"\n                           name=\"email\"\n                           required/>\n\n                    <div className=\"row g-3\">\n                        <div className=\"col\">\n\n                            <label className=\"form-label\" htmlFor=\"password1\">Password</label>\n                            <input onChange={this.handleInput}\n                                   value={this.state.password1}\n                                   className=\"form-control needs-validation\"\n                                   type=\"password\"\n                                   name=\"password1\"\n                                   required/>\n                        </div>\n                        <div className=\"col\">\n\n                            <label className=\"form-label\" htmlFor=\"password2\">Confirm Password</label>\n                            <input onChange={this.handleInput}\n                                   value={this.state.password2}\n                                   className=\"form-control mb-3 needs-validation\"\n                                   type=\"password\"\n                                   name=\"password2\"\n                                   required/>\n                        </div>\n                    </div>\n                    {\n                        this.state.username !== '' && this.state.email !== '' && this.state.password1 && this.state.password2\n                            ?\n                            <button className=\"btn btn-success\" type=\"submit\">Register</button>\n                            :\n                            <button className=\"btn btn-success\" type=\"submit\" disabled>Register</button>\n                    }\n                    <p>Already have an account? Why don't you <Link to=\"/login\">Login</Link>? </p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Register;","import {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            statusMessage: '',\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Authorization': Cookies.get('Authorization')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n            })\n        };\n\n        const response = await fetch('/rest-auth/login/', options);\n        const data = await response.json();\n\n        if (data.key) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n            if (Cookies.get('Authorization')) {\n                this.props.handleIsLoggedIn();\n                this.props.history.push('/celestial-list');\n                return <Redirect to=\"/celestial-list\"/>;\n            }\n        } else if (!response.ok) {\n            setTimeout(() => this.setState({statusMessage: 'Something went wrong.'}), 2000);\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout();\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"text-center login-register\" onSubmit={this.handleSubmit}>\n                    <h2>Login</h2>\n                    {this.state.statusMessage !== '' ?\n                        <div className=\"alert-danger\">{this.state.statusMessage}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput}\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"username\" required/>\n\n                    <label className=\"form-label\" htmlFor=\"password\">Password</label>\n                    <input onChange={this.handleInput}\n                           className=\"form-control mb-3\"\n                           type=\"password\"\n                           name=\"password\" required/>\n                    {\n                        this.state.username !== '' && this.state.password !== ''\n                            ?\n                            <button className=\"btn btn-success\">Login</button>\n                            :\n                            <button className=\"btn btn-success\" disabled>Login</button>\n                    }\n                    <p>Don't have an account yet? Why not <Link to=\"/register\">Register</Link> First?</p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Login;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Link, Redirect} from 'react-router-dom';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    async handleLogout() {\n\n        await fetch('/rest-auth/logout/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Authorization': Cookies.get('Authorization')\n            }\n        });\n        Cookies.remove('Authorization');\n        Cookies.remove('csrftoken');\n        this.props.handleIsLoggedIn();\n        this.props.history.push('/login');\n        return <Redirect to=\"/login\"/>;\n    }\n\n    render() {\n        return (\n            <div className=\"container test\">\n                <div className=\"left-boarder\">\n                    <h1>{this.props.user.user}</h1>\n                    <img className=\"profile-image\" src={this.props.user.profile_picture} alt=\"username\"/>\n                    <p>If you haven't yet created a profile, why not <Link to=\"/create-profile\">Create a\n                        Profile</Link></p>\n                    <button onClick={this.handleLogout} className=\"btn btn-danger\">Logout</button>\n                </div>\n                <div className=\"right-boarder\">\n                    <p className=\"about-text\" >{this.props.user.about_me}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass EphemForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            rise_time: '',\n            set_time: '',\n            magnitude: 0,\n            image: '',\n            description: '',\n            preview: '',\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleImage(e) {\n        let file = e.target.files[0];\n\n        this.setState({image: file});\n\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            this.setState({\n                preview: reader.result\n            });\n        };\n\n        reader.readAsDataURL(file);\n    }\n\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        let formData = new FormData();\n\n        formData.append('image', this.state.image);\n        formData.append('name', this.state.name);\n        formData.append('rise_time', this.state.rise_time);\n        formData.append('set_time', this.state.set_time);\n        formData.append('magnitude', this.state.magnitude);\n        formData.append('description', this.state.description);\n        const options = {\n            method: 'POST',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: formData\n        };\n\n        await fetch('/api/v1/ephem/', options);\n    }\n\n    render() {\n        return (\n            <form onSubmit={(e) => this.handleSubmit(e, this.state)}>\n                <label className=\"form-label\" htmlFor=\"name\">Name</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.name}\n                       name=\"name\"/>\n\n                <label className=\"form-label\" htmlFor=\"rise_time\">Rise Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.rise_time}\n                       name=\"rise_time\"/>\n\n                <label className=\"form-label\" htmlFor=\"set_time\">Set Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.set_time}\n                       name=\"set_time\"/>\n\n                <label className=\"form-label\" htmlFor=\"magnitude\">Magnitude</label>\n                <input className=\"form-control\"\n                       type=\"number\"\n                       onChange={this.handleInput}\n                       value={this.state.magnitude}\n                       name=\"magnitude\"/>\n                {\n                    this.state.image && <img src={this.state.preview} alt=\"preview\"/>\n                }\n                <label className=\"form-label\" htmlFor=\"image\">Image</label>\n                <input className=\"form-control\"\n                       type=\"file\"\n                       onChange={this.handleImage}\n                       name=\"image\"/>\n\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          value={this.state.description}\n                          name=\"description\"\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n}\n\nexport default EphemForm;","import {Component} from 'react';\n\nclass EphemDisplay extends Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ephem: [],\n        }\n    }\n\n    async componentDidMount() {\n        const response =  await fetch(\"/api/v1/ephem/\");\n        const data = await response.json();\n\n        this.setState({ephem: data})\n        console.log(this.state);\n    }\n\n    render() {\n        const ephems = this.state.ephem.map(ephem => <section>\n            <img src={ephem.image} alt={ephem.name}/>\n            <h1>{ephem.name}</h1>\n            <p>Rise time: </p>\n            <h2>{ephem.rise_time}</h2>\n            <p>Set time: </p>\n            <h2>{ephem.set_time}</h2>\n        </section>);\n        return (\n            <>\n                {ephems[0]}\n            </>\n        );\n    }\n}\n\nexport default EphemDisplay","import {Component} from 'react';\n\nclass EphemList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ephems: [],\n            message: {\n                to: '',\n                body: ''\n            },\n            isEditMode: false,\n            isAdmin: false,\n            submitting: false,\n            error: false,\n            result: ''\n        };\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleText = this.handleText.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.handleCheck = this.handleCheck.bind(this);\n        this.showResults = this.showResults.bind(this);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('api/v1/ephem/');\n        const data = await response.json();\n        this.setState({ephems: data});\n\n        const profile = await fetch('api/v1/profiles/details/');\n        const profileData = await profile.json();\n        let currentState = this.state.message;\n\n        currentState['to'] = '+' + profileData.phone;\n        this.setState({currentState});\n    }\n\n    handleEditMode() {\n        this.setState({isEditMode: true});\n    }\n\n    handleSubmit() {\n        this.setState({isEditMode: false});\n    }\n\n    async handleText(event, id) {\n        event.preventDefault();\n        let currentState = this.state.message;\n\n        currentState['body'] = `Rise time: ${this.state.ephems[id].rise_time} Name: ${this.state.ephems[id].name}`;\n        this.setState({submitting: true});\n        this.setState({currentState});\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json'\n            },\n            body: JSON.stringify(this.state.message.body)\n        };\n        await fetch('/api/v1/broadcast/', options);\n        console.log(this.state.message.body);\n    }\n\n    handleInput(event) {\n        this.setState({result: event.target.value});\n    }\n\n    handleCheck() {\n        console.log(this.state.ephems.filter(name => name.name === this.state.result));\n    }\n\n    showResults(results){\n        return <div className=\"card\">\n            <div className=\"card-header\">\n                <h1>results.name</h1>\n            </div>\n        </div>\n    }\n\n    // TODO hook up when finished.\n    // showForm(item) {\n    //     return <form action=\"\" onSubmit={this.handleSubmit}>\n    //         <label className=\"form-label\" htmlFor=\"image\">Image</label>\n    //         <input className=\"form-control\"\n    //                type=\"file\"\n    //                name=\"image\"/>\n    //\n    //         <label className=\"form-label\" htmlFor=\"name\">Name</label>\n    //         <input className=\"form-control\"\n    //                type=\"text\"\n    //                name=\"name\"/>\n    //\n    //         <label className=\"form-label\" htmlFor=\"rise_time\">Rise Time</label>\n    //         <input className=\"form-control\" type=\"text\" name=\"rise_time\"/>\n    //\n    //         <label className=\"form-label\" htmlFor=\"set_time\">Set Time</label>\n    //         <input className=\"form-control\" type=\"text\" name=\"set_time\"/>\n    //\n    //         <label htmlFor=\"description\" className=\"form-label\">Description</label>\n    //         <textarea className=\"form-control\" name=\"description\" id=\"\" cols=\"30\" rows=\"10\">\n    //\n    //         </textarea>\n    //\n    //         <button className=\"btn btn-success\">Edit Planet</button>\n    //     </form>;\n    //\n    // }\n\n    render() {\n        const result = this.state.results?.map(x => x)\n        const list = this.state.ephems.map((item, index) =>\n            <div key={item.id} className=\"col-sm-4 col-12 mb-3\">\n                <div className=\"card h-100\">\n                    <div className=\"card-header\">\n                        <img src={item.image} alt=\"A planet, star or satellite.\"/>\n                        <h2>{item.name}</h2>\n                    </div>\n                    <p>rise time: {item.rise_time}</p>\n                    <p>set time: {item.set_time}</p>\n                    <button onClick={(event) => this.handleText(event, index)} className=\"btn-primary\">Remind me\n                    </button>\n                    {\n                        this.state.isAdmin\n                            ?\n                            <div className=\"card-footer\">\n                                <button onClick={this.handleEditMode} className=\"btn btn-primary\">Edit</button>\n                                <button className=\"btn btn-danger\">Delete</button>\n                            </div>\n                            :\n                            null\n                    }\n                </div>\n            </div>\n        );\n        return (\n            <>\n                <label htmlFor=\"result\">Search</label>\n                <div className=\"row\">\n                    <input className=\"col-10 mb-5\"\n                           value={this.state.result}\n                           onChange={this.handleInput}\n                           type=\"text\"\n                           name=\"result\"/>\n                    <button onClick={this.handleCheck} className=\"col-2 btn btn-primary mb-5\">Search</button>\n                </div>\n\n                {\n                    !this.state.isEditMode\n                        ?\n                        <div className=\"planet-width\n                                        px-4\n                                        row\">\n\n                            {\n                             !this.state.result.includes(list.name)\n                                ?\n                                list\n                                :\n                                 this.showResults(result)\n                            }\n                        </div>\n                        :\n                        this.showForm()\n                }\n            </>\n        );\n    }\n}\n\nexport default EphemList;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Redirect} from 'react-router-dom';\n\nclass EventForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            time: '',\n            target: '',\n            description: '',\n            message: {\n                to: this.props.phone,\n                body: 'Testing 1, 2, 3'\n            }\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                time: this.state.time,\n                ephemeris: this.state.target,\n                description: this.state.description,\n            })\n        };\n\n        await this.handleSMS(event);\n        const response = await fetch('/api/v1/events/', options);\n        this.props.history.push('/events');\n\n        if(response.status === 201 || response.status === 200)\n            return <Redirect to=\"/events\"/>;\n    }\n\n    async handleSMS(event) {\n        event.preventDefault();\n        let currentState = this.state.message;\n        currentState['body'] = `Your viewing target: ${this.state.name} will rise at ${this.state.time}  ${this.state.description}`;\n        this.setState({currentState});\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json'\n            },\n            body: JSON.stringify(this.state.message.body)\n        };\n        await fetch('/api/v1/broadcast/', options);\n\n        this.setState({submitting: true});\n    }\n\n    render() {\n        return (\n            <form className=\"login-register\" onSubmit={(e) => this.handleSubmit(e)}>\n                <h2>Create an Event</h2>\n                <label className=\"form-label\" htmlFor=\"name\">Event Name</label>\n                <input className=\"form-control\" type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"name\"/>\n                <label className=\"form-label\" htmlFor=\"target\">Target</label>\n                <input type=\"text\"\n                       className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"target\"/>\n                <label className=\"form-label\" htmlFor=\"time\">Time</label>\n                <input className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"time\"\n                       type=\"text\"/>\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          name=\"description\"\n                          value={this.state.value}>\n                </textarea>\n                {\n                    this.state.name !== '' && this.state.time !== '' && this.state.target !== '' && this.state.description !== ''\n                    ?\n                    <button className=\"btn btn-success\" type=\"submit\">Create Event</button>\n                    :\n                        <button className=\"btn btn-success\" type=\"submit\" disabled>Create Event</button>\n                 }\n            </form>\n        );\n    }\n\n}\n\nexport default EventForm;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Redirect} from 'react-router-dom';\n\nclass EventDisplay extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            data: [],\n            isEditMode: false,\n            isAdmin: false,\n            name: '',\n            ephemeris: '',\n            time: '',\n        };\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        const options = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                ephemeris: this.state.ephemeris,\n                time: this.state.time,\n                description: this.state.description,\n            })\n        };\n        await fetch(`/api/v1/events/${this.state.id}/`, options);\n        window.location.reload();\n        return <Redirect to='/events'/>;\n    }\n\n    handleDelete(id) {\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken')\n            }\n        };\n        fetch(`/api/v1/events/${id}/`, options);\n        // this.props.history.push('/events');\n        window.location.reload();\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/v1/events/');\n        const data = await response.json();\n        this.setState({data});\n    }\n\n    showForm() {\n        return <form className=\"login-register\" onSubmit={this.handleSubmit}>\n            <label className=\"form-label\" htmlFor=\"name\">Name</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"name\"\n                   value={this.state.name || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"ephemeris\">Target</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"ephemeris\"\n                   value={this.state.ephemeris || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"time\">Time</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"time\"\n                   value={this.state.time || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"description\">Description</label>\n            <textarea className=\"form-control\"\n                      name=\"description\"\n                      onChange={this.handleInput}\n                      value={this.state.description} cols=\"30\" rows=\"10\">\n            </textarea>\n            <button className=\"btn btn-primary\" type=\"submit\">Edit</button>\n        </form>;\n    }\n\n    handleEditMode(e) {\n        this.setState((previousState) => ({isEditMode: !previousState.isEditMode}));\n        this.setState({\n            name: e.name,\n            ephemeris: e.ephemeris,\n            time: e.time,\n            id: e.id,\n            description: e.description\n        });\n    }\n\n    render() {\n        let events = this.state.data?.map(event => <section className=\"card\" key={event.id}>\n            <div className=\"event-card\">\n                <div className=\"card-header\">\n                    <h2>{event.name}</h2>\n                    <p>{event.ephemeris}</p>\n                </div>\n                <p>{event.time}</p>\n                <p>{event.description}</p>\n                <div className=\"button-group card-footer\">\n                    <button onClick={() => this.handleEditMode(event)} className=\"btn btn-primary\">Edit</button>\n                    <button onClick={() => this.handleDelete(event.id)} className=\"btn btn-danger\">Delete\n                    </button>\n                </div>\n            </div>\n        </section>);\n        return (\n            <div className=\"d-flex\">\n                {\n                    !this.state.isEditMode\n                        ?\n                        events\n                        :\n                        this.showForm()\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default EventDisplay;","import {Component} from 'react';\nimport {NavLink, Redirect, withRouter} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAdmin: false,\n        };\n\n\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    async handleLogout() {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Authorization': Cookies.get('Authorization'),\n            }\n        };\n        await fetch('/rest-auth/logout/', options);\n        Cookies.remove('csrftoken');\n        Cookies.remove('Authorization');\n        this.props.history.push('/login');\n        this.props.handleIsLoggedIn();\n        return <Redirect to='/login'/>;\n    }\n\n    render() {\n        return (\n            <nav className=\"nav navbar container-fluid navbar-dark\">\n                {\n                    this.props.isLoggedIn\n                        ?\n                        <>\n                            <NavLink className=\"navbar-brand\" to='/home'>Night Watch</NavLink>\n                            <NavLink to=\"/profile\">Profile</NavLink>\n                            <NavLink to=\"/event/form\">Add Event</NavLink>\n                            <NavLink to=\"/celestial-list\">Celestial Events</NavLink>\n                            <NavLink to=\"/events\">Upcoming Events</NavLink>\n                            <NavLink to='/glossary'>Glossary</NavLink>\n                            <NavLink to='/logout' onClick={this.handleLogout}>Logout</NavLink>\n                            {/*<NavLink>Logout</NavLink>*/}\n                        </>\n                        :\n                        <>\n                            <NavLink to='/home'>Home</NavLink>\n                            <NavLink to=\"/register\">Register</NavLink>\n                            <NavLink to=\"/login\">Login</NavLink>\n                        </>\n                }\n                {\n                    this.state.isAdmin\n                        ?\n                        <NavLink to=\"/ephem/form\">Add Planet</NavLink>\n                        :\n                        null\n                }\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(Navigation);","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Redirect} from 'react-router-dom';\n\nclass ProfileForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            profile_picture: '',\n            about_me: '',\n            equipment: '',\n            preview: '',\n            receive_notifications: false,\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCheck = this.handleCheck.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        let formData = new FormData();\n        formData.append('profile_picture', this.state.profile_picture);\n        formData.append('about_me', this.state.about_me);\n        formData.append('equipment', this.state.equipment);\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: formData\n        };\n\n        const response = await fetch('/api/v1/profiles/create/', options);\n        const data = await response.json().catch(error => console.log(error));\n        console.log(data);\n\n        if (response.ok)\n            return <Redirect to=\"/profile\"/>;\n    }\n\n    handleImage(event) {\n        let file = event.target.files[0];\n\n        this.setState({profile_picture: file});\n\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            this.setState({preview: reader.result});\n        };\n\n        reader.readAsDataURL(file);\n    }\n\n    handleCheck(event) {\n        this.setState((previousState) => ({\n            receive_notifications: !previousState.receive_notifications\n        }))\n    }\n\n    render() {\n        return (\n            <form className=\"login-register\" onSubmit={(e) => this.handleSubmit(e)}>\n                <h2>Create Your Profile</h2>\n                {\n                    this.state.profile_picture ? <img src={this.state.preview} alt=\"preview\"/> : null\n                }\n                <label className=\"form-label\" htmlFor=\"profile_picture\">Profile Picture</label>\n                <input className=\"form-control\"\n                       onChange={this.handleImage}\n                       type=\"file\"\n                       name=\"profile_picture\"/>\n\n                <label className=\"form-label\" htmlFor=\"location\">City</label>\n                <input className=\"form-control\" type=\"text\" name=\"location\" id=\"location\"/>\n\n                <label className=\"form-label\" htmlFor=\"about_me\">About Me</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          value={this.state.about_me}\n                          name=\"about_me\"\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n\n                <label className=\"form-label\" htmlFor=\"receive_notifications\">Receive Notifications</label>\n                <input className=\"form-group\"\n                       type=\"checkbox\"\n                       onChange={this.handleCheck}\n                       value={this.state.receive_notifications}\n                       name=\"receive_notifications\"/>\n                {\n                    this.state.receive_notifications\n                        ?\n                        <>\n                            <label className=\"form-label\" htmlFor=\"phone_number\">Phone #</label>\n                            <input type=\"tel\"\n                                   className=\"form-control\"\n                                   name=\"phone_number\"\n                                   id=\"phone_number\"\n                                   maxLength={12}\n                                   placeholder=\"for alerting you of astro events\"/>\n                        </>\n                        :\n                        null\n                }\n\n                <button className=\"btn btn-success\" type=\"submit\">Create Profile</button>\n            </form>\n        );\n    }\n}\n\nexport default ProfileForm;","import {Component} from 'react';\n\nclass Home extends Component{\n    render() {\n        return (\n            <>\n                <h2>Welcome to Night Watch</h2>\n                <p>Night Watch is a simple astronomy planning app, register or login to view more!</p>\n            </>\n        );\n    }\n}\n\nexport default Home","import {Component} from 'react'\n\nclass About extends Component{\n    render() {\n        return (\n            <div>\n                About\n            </div>\n        );\n    }\n}\n\nexport default About","import {Component} from 'react';\n\nclass Glossary extends Component{\n    render() {\n        return (\n            <div>\n                Glossary\n            </div>\n        );\n    }\n}\n\nexport default Glossary;","import {Component} from 'react';\n\n// This is a test, only a test.\nclass SMSForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: {\n                to: '',\n                body: ''\n            },\n            submitting: false,\n            error: false\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({\n            message: {...this.state.message, [event.target.name]: event.target.value}\n        });\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json'\n            },\n            body: JSON.stringify(this.state.message)\n        };\n        await fetch('/api/v1/broadcast/', options);\n\n        this.setState({submitting: true});\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className=\"login-register\">\n                <h2>Set Reminder</h2>\n                <label className=\"form-label\" htmlFor=\"to\">Phone #:</label>\n                <input className=\"form-control\"\n                       value={this.state.message.to}\n                       onChange={this.handleInput}\n                       type=\"tel\"\n                       name=\"to\"\n                       id=\"to\"/>\n\n                <label className=\"form-label\" htmlFor=\"body\">Body:</label>\n                <textarea className=\"form-control\"\n                          name=\"body\"\n                          id=\"body\"\n                          value={this.state.message.body}\n                          onChange={this.handleInput}\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n                <button className=\"btn btn-success\">Remind Me</button>\n            </form>\n        );\n    }\n}\n\nexport default SMSForm;","import './App.css';\nimport Register from './components/user/Register';\nimport Login from './components/user/Login';\nimport Profile from './components/user/Profile';\nimport {Switch, Route} from 'react-router-dom';\nimport {Component} from 'react';\nimport EphemForm from './components/ephem/EphemForm';\nimport EphemDisplay from './components/ephem/EphemDisplay';\nimport EphemList from './components/ephem/EphemList';\nimport EventForm from './components/events/EventForm';\nimport EventDisplay from './components/events/EventDisplay';\nimport Navigation from './components/Navigation';\nimport Cookies from 'js-cookie';\nimport ProfileForm from './components/user/ProfileForm';\nimport Home from './components/pages/Home';\nimport About from './components/pages/About';\nimport Glossary from './components/pages/Glossary';\nimport SMSForm from './components/ephem/SMSForm';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: !!Cookies.get('Authorization'),\n            isAdmin: false,\n            user: {\n                user: '',\n                profile_picture: '',\n                about_me: '',\n                my_equipment: [],\n                phone: '',\n            }\n        };\n        this.handleIsLoggedIn = this.handleIsLoggedIn.bind(this);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('api/v1/profiles/details');\n        const data = await response.json();\n\n\n        this.setState({\n            user: {\n                user: data.user,\n                profile_picture: data.profile_picture,\n                about_me: data.about_me,\n                my_equipment: data.my_equipment,\n                phone: data.phone\n            }\n        });\n    }\n\n\n    handleIsLoggedIn() {\n        this.setState((previousState) => ({isLoggedIn: !previousState.isLoggedIn}));\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Navigation isLoggedIn={this.state.isLoggedIn} handleIsLoggedIn={this.handleIsLoggedIn}/>\n                <Switch>\n                    <Route path='/home' component={Home}/>\n                    <Route path='/about' component={About}/>\n                    <Route path='/glossary' component={Glossary}/>\n                    <Route path='/register' component={Register}/>\n                    <Route path='/login' render={(props) => (<Login {...props} isLoggedIn={this.state.isLoggedIn}\n                                                                    handleIsLoggedIn={this.handleIsLoggedIn}/>)}/>\n                    <Route path=\"/profile\"\n                           render={(props) => (<Profile {...props} user={this.state.user}\n                                                        handleIsLoggedIn={this.handleIsLoggedIn}/>)}/>\n                    <Route path=\"/create-profile\" component={ProfileForm}/>\n                    <Route path=\"/ephem/form\" component={EphemForm}/>\n                    <Route path=\"/event/form\" render={(props) => (<EventForm {...props} phone={this.state.user.phone}/>)}/>\n                    <Route path=\"/display\" component={EphemDisplay}/>\n                    <Route path=\"/celestial-list\" component={EphemList}/>\n                    <Route path=\"/events\" component={EventDisplay}/>\n                    <Route path='/sms-form' component={SMSForm}/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}