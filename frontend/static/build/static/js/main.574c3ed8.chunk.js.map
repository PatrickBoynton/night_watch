{"version":3,"sources":["components/user/Register.js","components/user/Login.js","components/user/Profile.js","components/ephem/EphemForm.js","components/ephem/EphemDisplay.js","components/ephem/EphemList.js","components/events/EventForm.js","components/events/EventDisplay.js","components/Navigation.js","components/user/ProfileForm.js","components/pages/Home.js","components/pages/About.js","components/pages/Glossary.js","components/ephem/SMSForm.js","App.js","reportWebVitals.js","index.js"],"names":["Register","props","state","username","email","password1","password2","formErrors","other","handleInput","bind","handleSubmit","event","this","setState","target","name","value","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","json","data","console","log","status","set","key","history","push","to","className","onSubmit","e","htmlFor","onChange","type","required","Component","Login","password","statusMessage","handleIsLoggedIn","setInterval","Profile","user","profile_picture","about_me","my_equipment","handleLogout","remove","equipment","map","item","src","alt","onClick","EphemForm","rise_time","set_time","magnitude","image","description","preview","handleImage","file","files","reader","FileReader","onloadend","result","readAsDataURL","formData","FormData","append","cols","rows","EphemDisplay","ephem","ephems","EphemList","isEditMode","isAdmin","handleEditMode","list","alert","id","showForm","EventForm","time","ephemeris","EventDisplay","handleDelete","window","location","reload","previousState","events","Navigation","isLoggedIn","ProfileForm","catch","error","placeholder","Home","About","Glossary","SMSForm","message","submitting","App","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.574c3ed8.chunk.js","sourcesContent":["import {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: '',\n            formErrors: {\n                email: '',\n                username: '',\n                other: '',\n            }\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                email: this.state.email,\n                password1: this.state.password1,\n                password2: this.state.password2,\n            })\n        };\n        const response = await fetch('/rest-auth/registration/', options);\n        const data = await response.json();\n        console.log(data);\n        if (response.status === 201) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n            this.props.history.push(\"/create-profile\")\n            return <Redirect to=\"/create-profile\" />\n        } else {\n            console.log(data);\n            this.setState({formErrors: {username: data.username, email: data.email}})\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"login-register needs-validation\" onSubmit={(e) => this.handleSubmit(e)}>\n                    <h2>Register</h2>\n                    {this.state.formErrors.username !== '' ? <div className=\"alert-danger\" >{this.state.formErrors.username}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput}\n                           value={this.state.username}\n                           className=\"form-control needs-validation\"\n                           type=\"text\"\n                           name=\"username\"\n                           required/>\n\n                    {this.state.formErrors.email !== '' ? <div className=\"alert-danger\" >{this.state.formErrors.email}</div> : null }\n                    <label className=\"form-label\" htmlFor=\"email\">Email</label>\n                    <input onChange={this.handleInput}\n                           value={this.state.email}\n                           className=\"form-control needs-validation\"\n                           type=\"email\"\n                           name=\"email\"\n                           required/>\n\n                    <div className=\"row g-3\">\n                        <div className=\"col\">\n\n                            <label className=\"form-label\" htmlFor=\"password1\">Password</label>\n                            <input onChange={this.handleInput}\n                                   value={this.state.password1}\n                                   className=\"form-control needs-validation\"\n                                   type=\"password\"\n                                   name=\"password1\"\n                                   required/>\n                        </div>\n                        <div className=\"col\">\n\n                            <label className=\"form-label\" htmlFor=\"password2\">Confirm Password</label>\n                            <input onChange={this.handleInput}\n                                   value={this.state.password2}\n                                   className=\"form-control mb-3 needs-validation\"\n                                   type=\"password\"\n                                   name=\"password2\"\n                                   required/>\n                        </div>\n                    </div>\n                    <button className=\"btn btn-success\" type=\"submit\">Register</button>\n                    <p>Already have an account? Why don't you <Link to=\"/login\">Login</Link>? </p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Register;","import {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            statusMessage: '',\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Authorization': Cookies.get('Authorization')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n            })\n        };\n\n        const response = await fetch('/rest-auth/login/', options);\n        const data = await response.json();\n\n        if (data.key) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n            if (Cookies.get('Authorization')) {\n                this.props.handleIsLoggedIn();\n                this.props.history.push('/celestial-list');\n                return <Redirect to=\"/celestial-list\"/>;\n            }\n        } else {\n            if (response.status !== 200) {\n                setInterval(() => {\n                    this.setState({statusMessage: 'Something went wrong. Try again later.'});\n                }, 200);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"text-center login-register\" onSubmit={this.handleSubmit}>\n                    <h2>Login</h2>\n                    {this.state.statusMessage !== '' ?\n                        <div className=\"alert-danger\">{this.state.statusMessage}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput}\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"username\" required/>\n\n                    <label className=\"form-label\" htmlFor=\"password\" >Password</label>\n                    <input onChange={this.handleInput}\n                           className=\"form-control mb-3\"\n                           type=\"password\"\n                           name=\"password\" required/>\n                    <button className=\"btn btn-success\">Login</button>\n                    <p>Don't have an account yet? Why not <Link to=\"/register\">Register</Link> First?</p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Login;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Link, Redirect} from 'react-router-dom';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: '',\n            profile_picture:'',\n            about_me: '',\n            my_equipment: []\n        }\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('api/v1/profiles/details/')\n        const data = await response.json();\n        this.setState({user: data.user,\n                            profile_picture: data.profile_picture,\n                            about_me: data.about_me})\n    }\n\n\n    async handleLogout() {\n\n        await fetch('/rest-auth/logout/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Authorization': Cookies.get('Authorization')\n            }\n        });\n        Cookies.remove('Authorization');\n        Cookies.remove('csrftoken');\n        this.props.handleIsLoggedIn();\n        this.props.history.push('/login');\n        return <Redirect to=\"/login\"/>;\n    }\n\n    render() {\n        const equipment = this.state.equipment?.map(item => <p>{item}</p>)\n        return (\n            <div className=\"container test\">\n                <div className=\"left-boarder\">\n                    <h1>{this.state.user}</h1>\n                    <img className=\"profile-image\" src={this.state.profile_picture} alt=\"username\"/>\n                    <p>{equipment}</p>\n                    <p>If you haven't yet created a profile, why not <Link to=\"/create-profile\">Create a\n                        Profile</Link></p>\n                    <button onClick={this.handleLogout} className=\"btn btn-danger\">Logout</button>\n                </div>\n                <div className=\"right-boarder\">\n                    <p className=\"about-text\" >{this.state.about_me}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass EphemForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            rise_time: '',\n            set_time: '',\n            magnitude: 0,\n            image: '',\n            description: '',\n            preview: '',\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleImage(e) {\n        let file = e.target.files[0];\n\n        this.setState({image: file});\n\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            this.setState({\n                preview: reader.result\n            });\n        };\n\n        reader.readAsDataURL(file);\n    }\n\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        let formData = new FormData();\n\n        formData.append('image', this.state.image);\n        formData.append('name', this.state.name);\n        formData.append('rise_time', this.state.rise_time);\n        formData.append('set_time', this.state.set_time);\n        formData.append('magnitude', this.state.magnitude);\n        formData.append('description', this.state.description);\n        const options = {\n            method: 'POST',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: formData\n        };\n\n        await fetch('/api/v1/ephem/', options);\n    }\n\n    render() {\n        return (\n            <form onSubmit={(e) => this.handleSubmit(e, this.state)}>\n                <label className=\"form-label\" htmlFor=\"name\">Name</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.name}\n                       name=\"name\"/>\n\n                <label className=\"form-label\" htmlFor=\"rise_time\">Rise Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.rise_time}\n                       name=\"rise_time\"/>\n\n                <label className=\"form-label\" htmlFor=\"set_time\">Set Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.set_time}\n                       name=\"set_time\"/>\n\n                <label className=\"form-label\" htmlFor=\"magnitude\">Magnitude</label>\n                <input className=\"form-control\"\n                       type=\"number\"\n                       onChange={this.handleInput}\n                       value={this.state.magnitude}\n                       name=\"magnitude\"/>\n                {\n                    this.state.image && <img src={this.state.preview} alt=\"preview\"/>\n                }\n                <label className=\"form-label\" htmlFor=\"image\">Image</label>\n                <input className=\"form-control\"\n                       type=\"file\"\n                       onChange={this.handleImage}\n                       name=\"image\"/>\n\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          value={this.state.description}\n                          name=\"description\"\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n}\n\nexport default EphemForm;","import {Component} from 'react';\n\nclass EphemDisplay extends Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ephem: [],\n        }\n    }\n\n    async componentDidMount() {\n        const response =  await fetch(\"/api/v1/ephem/\");\n        const data = await response.json();\n\n        this.setState({ephem: data})\n        console.log(this.state);\n    }\n\n    render() {\n        const ephems = this.state.ephem.map(ephem => <section>\n            <img src={ephem.image} alt=\"The sun.\"/>\n            <h1>{ephem.name}</h1>\n            <p>Rise time: </p>\n            <h2>{ephem.rise_time}</h2>\n            <p>Set time: </p>\n            <h2>{ephem.set_time}</h2>\n        </section>);\n        return (\n            <>\n                {ephems[0]}\n            </>\n        );\n    }\n}\n\nexport default EphemDisplay","import {Component} from 'react';\n\nclass EphemList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ephems: [],\n            isEditMode: false,\n            isAdmin: false,\n        };\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('api/v1/ephem/');\n        const data = await response.json();\n        this.setState({ephems: data});\n    }\n\n    handleEditMode() {\n        this.setState({isEditMode: true});\n    }\n\n    handleSubmit() {\n        this.setState({isEditMode: false});\n    }\n\n    // showForm(item) {\n    //     return <form action=\"\" onSubmit={this.handleSubmit}>\n    //         <label className=\"form-label\" htmlFor=\"image\">Image</label>\n    //         <input className=\"form-control\"\n    //                type=\"file\"\n    //                name=\"image\"/>\n    //\n    //         <label className=\"form-label\" htmlFor=\"name\">Name</label>\n    //         <input className=\"form-control\"\n    //                type=\"text\"\n    //                name=\"name\"/>\n    //\n    //         <label className=\"form-label\" htmlFor=\"rise_time\">Rise Time</label>\n    //         <input className=\"form-control\" type=\"text\" name=\"rise_time\"/>\n    //\n    //         <label className=\"form-label\" htmlFor=\"set_time\">Set Time</label>\n    //         <input className=\"form-control\" type=\"text\" name=\"set_time\"/>\n    //\n    //         <label htmlFor=\"description\" className=\"form-label\">Description</label>\n    //         <textarea className=\"form-control\" name=\"description\" id=\"\" cols=\"30\" rows=\"10\">\n    //\n    //         </textarea>\n    //\n    //         <button className=\"btn btn-success\">Edit Planet</button>\n    //     </form>;\n    //\n    // }\n\n    render() {\n        const list = this.state.ephems.map(item =>\n            <div key={item.id} className=\"card\">\n                <div className=\"card-header\">\n                    <img src={item.image} alt=\"A planet, star or satellite.\"/>\n                    <h2 className=\"align-self-end\">{item.name}</h2>\n                </div>\n                <p>rise time: {item.rise_time}</p>\n                <p>set time: {item.set_time}</p>\n                <button onClick={() => alert(\"Clicked!\")} className=\"btn-primary\">Remind me</button>\n                {\n                    this.state.isAdmin\n                        ?\n                        <div className=\"card-footer\">\n                            <button onClick={this.handleEditMode} className=\"btn btn-primary\">Edit</button>\n                            <button className=\"btn btn-danger\">Delete</button>\n                        </div>\n                        :\n                        null\n                }\n            </div>\n        );\n        return (\n            <>\n                {\n                    !this.state.isEditMode\n                        ?\n                        <div className=\"d-flex flex-wrap justify-content-center\">\n                            {list}\n                        </div>\n                        :\n                        this.showForm()\n                }\n            </>\n        );\n    }\n}\n\nexport default EphemList;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Redirect} from 'react-router-dom';\n\nclass EventForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            time: '',\n            target: '',\n            description: '',\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                time: this.state.time,\n                ephemeris: this.state.target,\n                description: this.state.description,\n            })\n        };\n        const response = await fetch('/api/v1/events/', options);\n        const data = await response.json();\n        console.log(data);\n        this.props.history.push('/events');\n        return <Redirect to=\"/events\"/>;\n    }\n\n    render() {\n        return (\n            <form className=\"login-register\" onSubmit={this.handleSubmit}>\n                <h2>Create an Event</h2>\n                <label className=\"form-label\" htmlFor=\"name\">Event Name</label>\n                <input className=\"form-control\" type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"name\"/>\n                <label className=\"form-label\" htmlFor=\"target\">Target</label>\n                <input type=\"text\"\n                       className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"target\"/>\n                <label className=\"form-label\" htmlFor=\"time\">Time</label>\n                <input className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"time\"\n                       type=\"text\"/>\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          name=\"description\"\n                          value={this.state.value}>\n                </textarea>\n                <button className=\"btn btn-success\" type=\"submit\">Create Event</button>\n            </form>\n        );\n    }\n\n}\n\nexport default EventForm;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Redirect} from 'react-router-dom';\n\nclass EventDisplay extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            data: [],\n            isEditMode: false,\n            isAdmin: false,\n            name: '',\n            ephemeris: '',\n            time: '',\n        };\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        const options = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                ephemeris: this.state.ephemeris,\n                time: this.state.time,\n                description: this.state.description,\n            })\n        };\n        await fetch(`/api/v1/events/${this.state.id}/`, options);\n        window.location.reload();\n        return <Redirect to='/events'/>;\n    }\n\n    handleDelete(id) {\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken')\n            }\n        };\n        fetch(`/api/v1/events/${id}/`, options);\n        // this.props.history.push('/events');\n        window.location.reload();\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/v1/events/');\n        const data = await response.json();\n        this.setState({data});\n    }\n\n    showForm() {\n        return <form className=\"login-register\" onSubmit={this.handleSubmit}>\n            <label className=\"form-label\" htmlFor=\"name\">Name</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"name\"\n                   value={this.state.name || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"ephemeris\">Target</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"ephemeris\"\n                   value={this.state.ephemeris || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"time\">Time</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"time\"\n                   value={this.state.time || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"description\">Description</label>\n            <textarea className=\"form-control\"\n                      name=\"description\"\n                      onChange={this.handleInput}\n                      value={this.state.description} cols=\"30\" rows=\"10\">\n            </textarea>\n            <button className=\"btn btn-primary\" type=\"submit\">Edit</button>\n        </form>;\n    }\n\n    handleEditMode(e) {\n        this.setState((previousState) => ({isEditMode: !previousState.isEditMode}));\n        this.setState({\n            name: e.name,\n            ephemeris: e.ephemeris,\n            time: e.time,\n            id: e.id,\n            description: e.description\n        });\n    }\n\n    render() {\n        let events = this.state.data?.map(event => <section className=\"card\" key={event.id}>\n            <div className=\"event-card\">\n                <div className=\"card-header\">\n                    <h2>{event.name}</h2>\n                    <p>{event.ephemeris}</p>\n                </div>\n                <p>{event.time}</p>\n                <p>{event.description}</p>\n                <div className=\"button-group card-footer\">\n                    <button onClick={() => this.handleEditMode(event)} className=\"btn btn-primary\">Edit</button>\n                    <button onClick={() => this.handleDelete(event.id)} className=\"btn btn-danger\">Delete\n                    </button>\n                </div>\n            </div>\n        </section>);\n        return (\n            <div className=\"d-flex\">\n                {\n                    !this.state.isEditMode\n                        ?\n                        events\n                        :\n                        this.showForm()\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default EventDisplay;","import {Component} from 'react';\nimport {NavLink} from 'react-router-dom';\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAdmin: false,\n        };\n    }\n\n    render() {\n        return (\n            <nav className=\"nav navbar container-fluid navbar-dark\">\n                {\n                    this.props.isLoggedIn\n                        ?\n                        <>\n                            <NavLink className=\"navbar-brand\" to='/home' >Night Watch</NavLink>\n                            <NavLink to=\"/profile\">Profile</NavLink>\n                            <NavLink to=\"/event/form\">Add Event</NavLink>\n                            <NavLink to=\"/celestial-list\">Planets</NavLink>\n                            <NavLink to=\"/events\">Upcoming Events</NavLink>\n                            <NavLink to='/glossary' >Glossary</NavLink>\n                            <NavLink to='/about' >About</NavLink>\n                        </>\n                        :\n                        <>\n                            <NavLink to='/home' >Home</NavLink>\n                            <NavLink to=\"/register\">Register</NavLink>\n                            <NavLink to=\"/login\">Login</NavLink>\n                        </>\n                }\n                {\n                    this.state.isAdmin\n                        ?\n                        <NavLink to=\"/ephem/form\">Add Planet</NavLink>\n                        :\n                        null\n                }\n            </nav>\n        );\n    }\n}\n\nexport default Navigation;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Redirect} from 'react-router-dom';\n\nclass ProfileForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            profile_picture: '',\n            about_me: '',\n            equipment: '',\n            preview: ''\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        let formData = new FormData();\n        formData.append('profile_picture', this.state.profile_picture);\n        formData.append('about_me', this.state.about_me);\n        formData.append('equipment', this.state.equipment);\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: formData\n        };\n\n        const response = await fetch('/api/v1/profiles/create/', options);\n        const data = await response.json().catch(error => console.log(error));\n        console.log(data);\n\n        if (response.status === 201)\n            return <Redirect to=\"/profile\" />\n    }\n\n    handleImage(event) {\n        let file = event.target.files[0];\n\n        this.setState({profile_picture: file});\n\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            this.setState({preview: reader.result});\n        };\n\n        reader.readAsDataURL(file);\n    }\n\n    render() {\n        return (\n            <form className=\"login-register\" onSubmit={(e) => this.handleSubmit(e)}>\n                <h2>Create Your Profile</h2>\n                {\n                    this.state.profile_picture && <img src={this.state.preview} alt=\"preview\"/>\n                }\n                <label className=\"form-label\" htmlFor=\"profile_picture\">Profile Picture</label>\n                <input className=\"form-control\"\n                       onChange={this.handleImage}\n                       type=\"file\"\n                       name=\"profile_picture\"/>\n\n                {/* <label className=\"form-label\" htmlFor=\"image\">Image</label>*/}\n                {/*<input className=\"form-control\"*/}\n                {/*       type=\"file\"*/}\n                {/*       onChange={this.handleImage}*/}\n                {/*       name=\"image\"/>      */}\n\n                <label className=\"form-label\" htmlFor=\"equipment\">My Equipment</label>\n                <input className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.equipment}\n                       type=\"text\"\n                       name=\"equipment\"\n                       placeholder=\"Whatever you view the night sky with.\"/>\n\n                <label className=\"form-label\" htmlFor=\"about_me\">About Me</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          value={this.state.about_me}\n                          name=\"about_me\"\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n\n                <button className=\"btn btn-success\" type=\"submit\">Create Profile</button>\n            </form>\n        );\n    }\n}\n\nexport default ProfileForm;","import {Component} from 'react';\n\nclass Home extends Component{\n    render() {\n        return (\n            <>\n                <h2>Welcome to Night Watch</h2>\n                <p>Night Watch is a simple astronomy planning app, register or login to view more!</p>\n            </>\n        );\n    }\n}\n\nexport default Home","import {Component} from 'react'\n\nclass About extends Component{\n    render() {\n        return (\n            <div>\n                About\n            </div>\n        );\n    }\n}\n\nexport default About","import {Component} from 'react';\n\nclass Glossary extends Component{\n    render() {\n        return (\n            <div>\n                Glossary\n            </div>\n        );\n    }\n}\n\nexport default Glossary;","import {Component} from 'react';\n\nclass SMSForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: {\n                to: '',\n                body: ''\n            },\n            submitting: false,\n            error: false\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({\n            message: {...this.state.message, [event.target.name]: event.target.value}\n        });\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json'\n            },\n            body: JSON.stringify(this.state.message)\n        };\n        const response = await fetch('/api/v1/broadcast/', options);\n        const data = await response.json();\n\n        this.setState({submitting: true});\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className=\"login-register\">\n                <h2>Set Reminder</h2>\n                <label className=\"form-label\" htmlFor=\"to\">Phone #:</label>\n                <input className=\"form-control\"\n                       value={this.state.message.to}\n                       onChange={this.handleInput}\n                       type=\"tel\"\n                       name=\"to\"\n                       id=\"to\"/>\n\n                <label className=\"form-label\" htmlFor=\"body\">Body:</label>\n                <textarea className=\"form-control\"\n                          name=\"body\"\n                          id=\"body\"\n                          value={this.state.message.body}\n                          onChange={this.handleInput}\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n                <button className=\"btn btn-success\">Remind Me</button>\n            </form>\n        );\n    }\n}\n\nexport default SMSForm;","import './App.css';\nimport Register from './components/user/Register';\nimport Login from './components/user/Login';\nimport Profile from './components/user/Profile';\nimport {Switch, Route} from 'react-router-dom';\nimport {Component} from 'react';\nimport EphemForm from './components/ephem/EphemForm';\nimport EphemDisplay from './components/ephem/EphemDisplay';\nimport EphemList from './components/ephem/EphemList';\nimport EventForm from './components/events/EventForm';\nimport EventDisplay from './components/events/EventDisplay';\nimport Navigation from './components/Navigation';\nimport Cookies from 'js-cookie';\nimport ProfileForm from './components/user/ProfileForm';\nimport Home from './components/pages/Home';\nimport About from './components/pages/About';\nimport Glossary from './components/pages/Glossary';\nimport SMSForm from './components/ephem/SMSForm';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: !!Cookies.get('Authorization'),\n            isAdmin: false,\n        };\n        this.handleIsLoggedIn = this.handleIsLoggedIn.bind(this);\n    }\n\n    handleIsLoggedIn() {\n        this.setState((previousState) => ({isLoggedIn: !previousState.isLoggedIn}));\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Navigation isLoggedIn={this.state.isLoggedIn}/>\n                <Switch>\n                    <Route path='/home' component={Home}/>\n                    <Route path='/about' component={About} />\n                    <Route path='/glossary' component={Glossary}/>\n                    <Route path='/register' component={Register}/>\n                    <Route path='/login' render={(props) => (<Login {...props} isLoggedIn={this.state.isLoggedIn}\n                                                                    handleIsLoggedIn={this.handleIsLoggedIn}/>)}/>\n                    <Route path=\"/profile\"\n                           render={(props) => (<Profile {...props} handleIsLoggedIn={this.handleIsLoggedIn}/>)}/>\n                    <Route path=\"/create-profile\" component={ProfileForm}/>\n                    <Route path=\"/ephem/form\" component={EphemForm}/>\n                    <Route path=\"/event/form\" component={EventForm}/>\n                    <Route path=\"/display\" component={EphemDisplay}/>\n                    <Route path=\"/celestial-list\" component={EphemList}/>\n                    <Route path=\"/events\" component={EventDisplay}/>\n                    <Route path='/sms-form' component={SMSForm} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}