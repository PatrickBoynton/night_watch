{"version":3,"sources":["components/user/Register.js","components/user/Login.js","components/user/Profile.js","components/ephem/EphemForm.js","components/ephem/EphemDisplay.js","components/ephem/EphemList.js","components/events/EventForm.js","components/events/EventDisplay.js","components/Navigation.js","components/user/ProfileForm.js","components/pages/Home.js","components/pages/About.js","components/pages/Glossary.js","App.js","reportWebVitals.js","index.js"],"names":["Register","props","state","username","email","password1","password2","usernameStatus","emailStatus","password1Status","password2Status","profile_picture","equipment","about_me","handleInput","bind","handleSubmit","event","this","setState","target","name","value","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","json","data","console","log","status","set","key","history","push","to","className","onSubmit","e","htmlFor","onChange","type","Component","Login","password","statusMessage","isLoggedIn","handleIsLoggedIn","Profile","handleLogout","remove","style","border","height","src","alt","onClick","EphemForm","rise_time","set_time","magnitude","image","description","preview","handleImage","file","files","reader","FileReader","onloadend","result","readAsDataURL","formData","FormData","append","cols","rows","EphemDisplay","ephem","ephems","map","EphemList","isEditMode","isAdmin","handleEditMode","list","item","showForm","EventForm","time","ephemeris","EventDisplay","id","handleDelete","window","location","reload","previousState","events","Navigation","ProfileForm","placeholder","Home","About","Glossary","App","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a6fd9eb.chunk.js","sourcesContent":["import {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: '',\n            usernameStatus: '',\n            emailStatus: '',\n            password1Status: '',\n            password2Status: '',\n            profile_picture: '',\n            equipment: '',\n            about_me: '',\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                email: this.state.email,\n                password1: this.state.password1,\n                password2: this.state.password2,\n            })\n        };\n        const response = await fetch('/rest-auth/registration/', options);\n        const data = await response.json();\n        console.log(data);\n        if (response.status !== 201) {\n            // Done this way to prevent multiple errors.\n            // this.setState({usernameStatus: data.username[0]});\n            // this.setState({emailStatus: data.email[0]});\n            // this.setState({password1Status: data.password1[0]});\n            // this.setState({password2Status: data.password2[0]});\n            console.log('Not logged in!');\n        } else {\n            Cookies.set('Authorization', `Token ${data.key}`);\n            this.props.history.push(\"/create-profile\")\n            return <Redirect to=\"/create-profile\" />\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"login-register\" onSubmit={(e) => this.handleSubmit(e)}>\n                    <h2>Register</h2>\n                    {this.state.usernameStatus !== '' ? <div>{this.state.usernameStatus}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput}\n                           value={this.state.username}\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"username\"/>\n\n                    {this.state.emailStatus !== '' ? <div>{this.state.emailStatus}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"email\">Email</label>\n                    <input onChange={this.handleInput}\n                           value={this.state.email}\n                           className=\"form-control\"\n                           type=\"email\"\n                           name=\"email\"/>\n                    <div className=\"row g-3\">\n                        <div className=\"col\">\n                            {this.password1Status !== '' ? <div>{this.state.password1Status}</div> : null}\n                            <label className=\"form-label\" htmlFor=\"password1\">Password</label>\n                            <input onChange={this.handleInput}\n                                   value={this.state.password1}\n                                   className=\"form-control\"\n                                   type=\"password\"\n                                   name=\"password1\"/>\n                        </div>\n                        <div className=\"col\">\n                            {this.password2Status !== '' ? <div>{this.state.password2Status}</div> : null}\n                            <label className=\"form-label\" htmlFor=\"password2\">Confirm Password</label>\n                            <input onChange={this.handleInput}\n                                   value={this.state.password2}\n                                   className=\"form-control mb-3\"\n                                   type=\"password\"\n                                   name=\"password2\"/>\n                        </div>\n                    </div>\n                    <button className=\"btn btn-success\" type=\"submit\">Register</button>\n                    <p>Already have an account? Why don't you <Link to=\"/login\">Login</Link>? </p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Register;","import {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            statusMessage: '',\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                \"Authorization\": Cookies.get(\"Authorization\")\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n            })\n        };\n\n        const response = await fetch('/rest-auth/login/', options);\n        const data = await response.json();\n\n        if (data.key) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n            console.log(this.props.isLoggedIn);\n            if (Cookies.get(\"Authorization\")) {\n                this.props.handleIsLoggedIn();\n                this.props.history.push('/celestial-list');\n                return <Redirect to=\"/celestial-list\"/>;\n            }\n        } else {\n            if (response.status !== 200) {\n                console.log('Login unsuccessful.');\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <form className=\"text-center login-register\" onSubmit={this.handleSubmit}>\n                    <h2>Login</h2>\n                    {this.state.statusMessage !== '' ? <div>{this.state.statusMessage}</div> : null}\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\n                    <input onChange={this.handleInput}\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"username\"/>\n                    <label className=\"form-label\" htmlFor=\"password\">Password</label>\n                    <input onChange={this.handleInput}\n                           className=\"form-control mb-3\"\n                           type=\"password\"\n                           name=\"password\"/>\n                    <button className=\"btn btn-success\">Login</button>\n                    <p>Don't have an account yet? Why not <Link to=\"/register\">Register</Link> First?</p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Login;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Link, Redirect} from 'react-router-dom';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/rest-auth/user/');\n        const data = await response.json();\n        console.log(data);\n    }\n\n\n    async handleLogout() {\n\n        await fetch('/rest-auth/logout/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Authorization': Cookies.get('Authorization')\n            }\n        });\n        Cookies.remove('Authorization');\n        Cookies.remove('csrftoken');\n        this.props.handleIsLoggedIn();\n        this.props.history.push('/login');\n        return <Redirect to=\"/login\"/>;\n    }\n\n    render() {\n        return (\n            <div style={{border: '2px solid white', height: '100vh'}}\n                 className=\"container\">\n                {/*<div className=\"card-header\">*/}\n                {/*    <h1>Username</h1>*/}\n                {/*    <img src=\"#\" alt=\"user\"/>*/}\n                {/*    <p>About me</p>*/}\n                {/*</div>*/}\n                {/*<div className=\"card-footer\">*/}\n                {/*    <p>My equipment</p>*/}\n\n                {/*  <p>If you haven't yet you can <Link to=\"/create-profile\" className=\"btn-link\">Create Profile</Link> </p>*/}\n                {/*<button onClick={this.handleLogout} className=\"btn btn-danger\">Logout</button>*/}\n                {/*</div>*/}\n                <div className=\"left-boarder\">\n                    <h1>Username</h1>\n                    <img src=\"#\" alt=\"username\"/>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Atque deleniti error laudantium non,\n                        quasi ratione recusandae reprehenderit tempore ullam vel?</p>\n                    <p>Telescope, binoculars, eyes</p>\n                    <p>If you haven't yet created a profile, why not <Link className=\"/create-profile\">Create a\n                        Profile</Link></p>\n                    <button onClick={this.handleLogout} className=\"btn btn-danger\">Logout</button>\n                </div>\n                <div className=\"right-boarder\">\n                    <div className=\"card event-card\">\n                        <div className=\"card-header\">\n                            <h2>Past Event</h2>\n                            <p>Past Target</p>\n                        </div>\n                        <p>12:20</p>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci alias fugit inventore\n                            officiis placeat quasi quo reprehenderit vero. Nihil, placeat.</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass EphemForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            rise_time: '',\n            set_time: '',\n            magnitude: 0,\n            image: '',\n            description: '',\n            preview: '',\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleImage(e) {\n        let file = e.target.files[0];\n        this.setState({ image: file });\n        let reader = new FileReader();\n        reader.onloadend = () => {\n            this.setState({\n                preview: reader.result\n            });\n        };\n        reader.readAsDataURL(file);\n    }\n\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        let formData = new FormData();\n        // TODO for in.\n        formData.append('image', this.state.image);\n        formData.append('name', this.state.name);\n        formData.append('rise_time', this.state.rise_time);\n        formData.append('set_time', this.state.set_time);\n        formData.append('magnitude', this.state.magnitude);\n        formData.append('description', this.state.description);\n        const options = {\n            method: 'POST',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: formData\n        };\n\n        const response = await fetch('/api/v1/ephem/', options);\n        const data = await response.json();\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <form onSubmit={(e) => this.handleSubmit(e, this.state)}>\n                <label className=\"form-label\" htmlFor=\"name\">Name</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.name}\n                       name=\"name\"/>\n                <label className=\"form-label\" htmlFor=\"rise_time\">Rise Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.rise_time}\n                       name=\"rise_time\"/>\n                <label className=\"form-label\" htmlFor=\"set_time\">Set Time</label>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.set_time}\n                       name=\"set_time\"/>\n                <label className=\"form-label\" htmlFor=\"magnitude\">Magnitude</label>\n                <input className=\"form-control\"\n                       type=\"number\"\n                       onChange={this.handleInput}\n                       value={this.state.magnitude}\n                       name=\"magnitude\"/>\n                <label className=\"form-label\" htmlFor=\"image\">Image</label>\n                <input className=\"form-control\"\n                       type=\"file\"\n                       onChange={this.handleImage}\n                       name=\"image\"/>\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          value={this.state.description}\n                          name=\"description\"\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n}\n\nexport default EphemForm;","import {Component} from 'react';\n\nclass EphemDisplay extends Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ephem: [],\n        }\n    }\n\n    async componentDidMount() {\n        const response =  await fetch(\"/api/v1/ephem/\");\n        const data = await response.json();\n\n        this.setState({ephem: data})\n        console.log(this.state);\n    }\n\n    render() {\n        const ephems = this.state.ephem.map(ephem => <section>\n            <img src={ephem.image} alt=\"The sun.\"/>\n            <h1>{ephem.name}</h1>\n            <p>Rise time: </p>\n            <h2>{ephem.rise_time}</h2>\n            <p>Set time: </p>\n            <h2>{ephem.set_time}</h2>\n        </section>);\n        return (\n            <>\n                {ephems[0]}\n            </>\n        );\n    }\n}\n\nexport default EphemDisplay","import {Component} from 'react';\n\nclass EphemList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ephems: [],\n            isEditMode: false,\n            isAdmin: false,\n        };\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('api/v1/ephem/');\n        const data = await response.json();\n        this.setState({ephems: data});\n        console.log(this.state.ephems);\n    }\n\n    handleEditMode() {\n        this.setState({isEditMode: true});\n    }\n\n    handleSubmit() {\n        this.setState({isEditMode: false});\n    }\n\n    // showForm(item) {\n    //     return <form action=\"\" onSubmit={this.handleSubmit}>\n    //         <label className=\"form-label\" htmlFor=\"image\">Image</label>\n    //         <input className=\"form-control\"\n    //                type=\"file\"\n    //                name=\"image\"/>\n    //\n    //         <label className=\"form-label\" htmlFor=\"name\">Name</label>\n    //         <input className=\"form-control\"\n    //                type=\"text\"\n    //                name=\"name\"/>\n    //\n    //         <label className=\"form-label\" htmlFor=\"rise_time\">Rise Time</label>\n    //         <input className=\"form-control\" type=\"text\" name=\"rise_time\"/>\n    //\n    //         <label className=\"form-label\" htmlFor=\"set_time\">Set Time</label>\n    //         <input className=\"form-control\" type=\"text\" name=\"set_time\"/>\n    //\n    //         <label htmlFor=\"description\" className=\"form-label\">Description</label>\n    //         <textarea className=\"form-control\" name=\"description\" id=\"\" cols=\"30\" rows=\"10\">\n    //\n    //         </textarea>\n    //\n    //         <button className=\"btn btn-success\">Edit Planet</button>\n    //     </form>;\n    //\n    // }\n\n    render() {\n        const list = this.state.ephems.map(item =>\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <img src={item.image} alt=\"A planet, star or satellite.\"/>\n                    <h2 className=\"align-self-end\">{item.name}</h2>\n                </div>\n                <p>rise time: {item.rise_time}</p>\n                <p>set time: {item.set_time}</p>\n                {\n                    this.state.isAdmin\n                        ?\n                        <div className=\"card-footer\">\n                            <button onClick={this.handleEditMode} className=\"btn btn-primary\">Edit</button>\n                            <button className=\"btn btn-danger\">Delete</button>\n                        </div>\n                        :\n                        null\n                }\n            </div>\n        );\n        return (\n            <>\n                {\n                    !this.state.isEditMode\n                        ?\n                        <div className=\"d-flex flex-wrap justify-content-center\">\n                            {list}\n                        </div>\n                        :\n                        this.showForm()\n                }\n            </>\n        );\n    }\n}\n\nexport default EphemList;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Redirect} from 'react-router-dom';\n\nclass EventForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            time: '',\n            target: '',\n            description: '',\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                time: this.state.time,\n                ephemeris: this.state.target,\n                description: this.state.description,\n            })\n        };\n        const response = await fetch('/api/v1/events/', options);\n        const data = await response.json();\n        console.log(data);\n        this.props.history.push('/events');\n        return <Redirect to=\"/events\"/>;\n    }\n\n    render() {\n        return (\n            <form className=\"login-register\" onSubmit={this.handleSubmit}>\n                <h2>Create an Event</h2>\n                <label className=\"form-label\" htmlFor=\"name\">Event Name</label>\n                <input className=\"form-control\" type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"name\"/>\n                <label className=\"form-label\" htmlFor=\"target\">Target</label>\n                <input type=\"text\"\n                       className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"target\"/>\n                <label className=\"form-label\" htmlFor=\"time\">Time</label>\n                <input className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.value}\n                       name=\"time\"\n                       type=\"text\"/>\n                <label className=\"form-label\" htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          name=\"description\"\n                          value={this.state.value}>\n                </textarea>\n                <button className=\"btn btn-success\" type=\"submit\">Create Event</button>\n            </form>\n        );\n    }\n\n}\n\nexport default EventForm;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {Redirect} from 'react-router-dom';\n\nclass EventDisplay extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            data: [],\n            isEditMode: false,\n            isAdmin: false,\n            name: '',\n            ephemeris: '',\n            time: '',\n        };\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        const options = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                ephemeris: this.state.ephemeris,\n                time: this.state.time,\n                description: this.state.description,\n            })\n        };\n        await fetch(`/api/v1/events/${this.state.id}/`, options);\n        window.location.reload();\n        return <Redirect to='/events'/>;\n    }\n\n    handleDelete(id) {\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken')\n            }\n        };\n        fetch(`/api/v1/events/${id}/`, options);\n        // this.props.history.push('/events');\n        window.location.reload();\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/v1/events/');\n        const data = await response.json();\n        this.setState({data});\n    }\n\n    showForm() {\n        return <form className=\"login-register\" onSubmit={this.handleSubmit}>\n            <label className=\"form-label\" htmlFor=\"name\">Name</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"name\"\n                   value={this.state.name || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"ephemeris\">Target</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"ephemeris\"\n                   value={this.state.ephemeris || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"time\">Time</label>\n            <input className=\"form-control\"\n                   type=\"text\"\n                   onChange={this.handleInput}\n                   name=\"time\"\n                   value={this.state.time || ''}/>\n\n            <label className=\"form-label\" htmlFor=\"description\">Description</label>\n            <textarea className=\"form-control\"\n                      name=\"description\"\n                      onChange={this.handleInput}\n                      value={this.state.description} cols=\"30\" rows=\"10\">\n            </textarea>\n            <button className=\"btn btn-primary\" type=\"submit\">Edit</button>\n        </form>;\n    }\n\n    handleEditMode(e) {\n        this.setState((previousState) => ({isEditMode: !previousState.isEditMode}));\n        this.setState({\n            name: e.name,\n            ephemeris: e.ephemeris,\n            time: e.time,\n            id: e.id,\n            description: e.description\n        });\n    }\n\n    render() {\n        let events = this.state.data?.map(event => <section key={event.id}>\n            <div className=\"card event-card\">\n                <div className=\"card-header\">\n                    <h2>{event.name}</h2>\n                    <p>{event.ephemeris}</p>\n                </div>\n                <p>{event.time}</p>\n                <p>{event.description}</p>\n                <div className=\"button-group card-footer\">\n                    <button onClick={() => this.handleEditMode(event)} className=\"btn btn-primary\">Edit</button>\n                    <button onClick={() => this.handleDelete(event.id)} className=\"btn btn-danger\">Delete\n                    </button>\n                </div>\n            </div>\n        </section>);\n        return (\n            <div className=\"d-flex\">\n                {\n                    !this.state.isEditMode\n                        ?\n                        events\n                        :\n                        this.showForm()\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default EventDisplay;","import {Component} from 'react';\nimport {NavLink} from 'react-router-dom';\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAdmin: false,\n        };\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar container-fluid navbar-dark\">\n                {\n                    this.props.isLoggedIn\n                        ?\n                        <>\n                            <NavLink to='/home' >Home</NavLink>\n                            <NavLink to=\"/profile\">Profile</NavLink>\n                            <NavLink to=\"/event/form\">Add Event</NavLink>\n                            <NavLink to=\"/celestial-list\">Planets</NavLink>\n                            <NavLink to=\"/events\">Upcoming Events</NavLink>\n                            <NavLink to='/glossary' >Glossary</NavLink>\n                            <NavLink to='/about' >About</NavLink>\n                        </>\n                        :\n                        <>\n                            <NavLink to='/home' >Home</NavLink>\n                            <NavLink to=\"/register\">Register</NavLink>\n                            <NavLink to=\"/login\">Login</NavLink>\n                        </>\n                }\n                {\n                    this.state.isAdmin\n                        ?\n                        <NavLink to=\"/ephem/form\">Add Planet</NavLink>\n                        :\n                        null\n                }\n            </nav>\n        );\n    }\n}\n\nexport default Navigation;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass ProfileForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            profile_picture: '',\n            about_me: '',\n            equipment: '',\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"Application/Json\",\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Authorization': Cookies.get('Authorization')\n            },\n            body: JSON.stringify({\n                // profile_picture: this.state.profile_picture,\n                about_me: this.state.about_me,\n                equipment: this.state.equipment\n            })\n        };\n\n        const response = await fetch('/api/v1/profiles/create/', options);\n        const data = await response.json();\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <form className=\"login-register\" onSubmit={(e) => this.handleSubmit(e)}>\n                <h2>Create Your Profile</h2>\n                <label className=\"form-label\" htmlFor=\"profile_picture\">Profile Picture</label>\n                <input className=\"form-control\"\n                       onChange={this.handleInput}\n                       type=\"file\"\n                       name=\"profile_picture\"/>\n\n                <label className=\"form-label\" htmlFor=\"equipment\">My Equipment</label>\n                <input className=\"form-control\"\n                       onChange={this.handleInput}\n                       value={this.state.equipment}\n                       type=\"text\"\n                       name=\"equipment\"\n                       placeholder=\"Whatever you view the night sky with.\"/>\n\n                <label className=\"form-label\" htmlFor=\"about_me\">About Me</label>\n                <textarea className=\"form-control\"\n                          onChange={this.handleInput}\n                          value={this.state.about_me}\n                          name=\"about_me\"\n                          cols=\"30\"\n                          rows=\"10\">\n                </textarea>\n\n                <button className=\"btn btn-success\" type=\"submit\">Create Profile</button>\n            </form>\n        );\n    }\n}\n\nexport default ProfileForm;","import {Component} from 'react';\n\nclass Home extends Component{\n    render() {\n        return (\n            <>\n                <h2>Welcome to Night Watch</h2>\n                <p>Night Watch is a simple astronomy planning app, register or login to view more!</p>\n            </>\n        );\n    }\n}\n\nexport default Home","import {Component} from 'react'\n\nclass About extends Component{\n    render() {\n        return (\n            <div>\n                About\n            </div>\n        );\n    }\n}\n\nexport default About","import {Component} from 'react';\n\nclass Glossary extends Component{\n    render() {\n        return (\n            <div>\n                Glossary\n            </div>\n        );\n    }\n}\n\nexport default Glossary;","import './App.css';\nimport Register from './components/user/Register';\nimport Login from './components/user/Login';\nimport Profile from './components/user/Profile';\nimport {Switch, Route} from 'react-router-dom';\nimport {Component} from 'react';\nimport EphemForm from './components/ephem/EphemForm';\nimport EphemDisplay from './components/ephem/EphemDisplay';\nimport EphemList from './components/ephem/EphemList';\nimport EventForm from './components/events/EventForm';\nimport EventDisplay from './components/events/EventDisplay';\nimport Navigation from './components/Navigation';\nimport Cookies from 'js-cookie';\nimport ProfileForm from './components/user/ProfileForm';\nimport Home from './components/pages/Home';\nimport About from './components/pages/About';\nimport Glossary from './components/pages/Glossary';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: !!Cookies.get('Authorization'),\n            isAdmin: false,\n        };\n        this.handleIsLoggedIn = this.handleIsLoggedIn.bind(this);\n    }\n\n    handleIsLoggedIn() {\n        this.setState((previousState) => ({isLoggedIn: !previousState.isLoggedIn}));\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Navigation isLoggedIn={this.state.isLoggedIn}/>\n                <Switch>\n                    <Route path='/home' component={Home}/>\n                    <Route path='/about' component={About} />\n                    <Route path='/glossary' component={Glossary}/>\n                    <Route path='/register' component={Register}/>\n                    <Route path='/login' render={(props) => (<Login {...props} isLoggedIn={this.state.isLoggedIn}\n                                                                    handleIsLoggedIn={this.handleIsLoggedIn}/>)}/>\n                    <Route path=\"/profile\"\n                           render={(props) => (<Profile {...props} handleIsLoggedIn={this.handleIsLoggedIn}/>)}/>\n                    <Route path=\"/create-profile\" component={ProfileForm}/>\n                    <Route path=\"/ephem/form\" component={EphemForm}/>\n                    <Route path=\"/event/form\" component={EventForm}/>\n                    <Route path=\"/display\" component={EphemDisplay}/>\n                    <Route path=\"/celestial-list\" component={EphemList}/>\n                    <Route path=\"/events\" component={EventDisplay}/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}